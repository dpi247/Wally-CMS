<?php

/*
 * Implementation of the hook_module
 */
function ccimapping_menu(){

 $items = array();
  
  $items['admin/cci/ccimapping/configuration'] = array(
    'title' => 'CCI Newsgate - Mapping configuration & settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ccimapping_form_configuration_form'),
    'access arguments' => array('access administration pages'),
    'description' => 'Allows administrators to set paramaters for this module to function properly.',
    'file' => 'includes/ccimapping.admin.inc',
  );
  
  $items['admin/cci/ccimapping/packagetype/editor'] = array(
    'title' => 'Packagetype Editor',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ccimapping_form_packagetype_editor_form',5),
    'access arguments' => array('administration pages'),
    'description' => 'View, edit, and delete your site\'s content with a destination filter.',
    'file' => 'includes/packagetype.editor.inc',
  );
  $items['admin/cci/ccimapping/productinfo/editor'] = array(
    'title' => 'Product Info editor',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ccimapping_form_productinfo_editor_form',5),
    'access arguments' => array('administration pages'),
    'description' => 'View, edit, and delete your site\'s content with a destination filter.',
    'file' => 'includes/productinfo.editor.inc',
  );
  
  return $items;
}

/*
 * Implementation of the hook_theme
 */
function ccimapping_theme(){
  $path = drupal_get_path('module', 'ccimapping');
  $base = array(
    'file' => 'theme.inc',
    'path' => "$path/theme",
  );
  return array(
    'ccimapping_typeselector'=>$base + array(
        'arguments'=>array('type'),
  
    ),
    'ccimapping_hierarchies'=>$base + array(
      'arguments'=>array('hierarchies'=>array()),
    ),
    );
}

function ccimap_type_converter($type){
  
  $mappings=variable_get('ccimapping_type','');
  $mappings=explode("\n", $mappings);
  foreach ($mappings as $mapping){
    $temp=explode("|", $mapping);
  $correct_mapping[$temp[0]]=$temp[1];
  }
  if(array_key_exists($type, $correct_mapping)){
    return $correct_mapping[$type];
  }
  else return $type;
}