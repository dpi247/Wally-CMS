<?php
define('WALLY_ADMIN_PATH', 'admin/wally');

/**
 * @file wallyadmin.module
 */

/**
 * Implementation of hook_perm()
 */
function wallyadmin_perm() {
  return array(
    'manage cache',
    'manage variables',
  );
}

/**
 * Implementation of hook_form_alter().
 */
function wallyadmin_form_alter(&$form, $form_state, $form_id) {
  // Make mods to every node form
  if ($form['#id'] == 'node-form') {
        
    $form['menu']['#collapsed'] = TRUE;
    $form['path']['#collapsed'] = TRUE;
    
    if (isset($form['flag'])) {
      $form['flag']['#collapsed'] = TRUE;      
    }
    
    // Hide the split summary button
    if (!empty($form['body_field'])) {
      $form['body_field']['teaser_js']['#type'] = 'hidden';
      $form['body_field']['teaser_include']['#type'] = 'hidden';
    }
  }
  
  //Aloud to set <none> for the menu link
  if ($form_id == 'menu_edit_item'){
    $form['menu']['link_path']['#required'] = FALSE;
    $form['menu']['link_path']['#description'] .= t(' Enter <i>&lt;none&gt;</i> to add no link.');
    $form['#validate'] = array('wallyadmin_menu_edit_item_validate');
  }
}

/*
 * Modification de la validation de l'ajout d'un menu
*/
function wallyadmin_menu_edit_item_validate($form, &$form_state){
  $item = &$form_state['values']['menu'];
  $normal_path = drupal_get_normal_path($item['link_path']);
  if ($item['link_path'] != $normal_path) {
    drupal_set_message(t('The menu system stores system paths only, but will use the URL alias for display. %link_path has been stored as %normal_path', array('%link_path' => $item['link_path'], '%normal_path' => $normal_path)));
    $item['link_path'] = $normal_path;
  }
  if (!menu_path_is_external($item['link_path'])) {
    $parsed_link = parse_url($item['link_path']);
    if (isset($parsed_link['query'])) {
      $item['options']['query'] = $parsed_link['query'];
    }
    else {
      // Use unset() rather than setting to empty string
      // to avoid redundant serialized data being stored.
      unset($item['options']['query']);
    }
    if (isset($parsed_link['fragment'])) {
      $item['options']['fragment'] = $parsed_link['fragment'];
    }
    else {
      unset($item['options']['fragment']);
    }
    if ($item['link_path'] != $parsed_link['path']) {
      $item['link_path'] = $parsed_link['path'];
    }
  }
  if ($item['link_path'] == '<none>'){
    $item['link_path'] = 'http://#';
    //La fonction qui permet de ne pas afficher d'url si l'url est http://# est wallyct_mainmenu (wallyextra/theme/wallyct_mainmenu)
  }
  elseif ((!trim($item['link_path']) || !menu_valid_path($item))) {
    form_set_error('link_path', t("The path '@link_path' is either invalid or you do not have access to it.", array('@link_path' => $item['link_path'])));
  }
}
/**
 * Implementation of hook_node_form_sidebar().
 *
 * This is an integration with the Slate theme of the Admin module.
 */
function wallyadmin_node_form_sidebar($form, $node) {
  return array(
    'group_identification',
    'path', 
    'options', 
    'menu', 
    'author', 
    'revision_information', 
    'comment_settings', 
    'flag',
    'scheduler_settings',
  );
}

/**
 * Implementation of hook_menu().
 */
function wallyadmin_menu() {
  $items = array();
  
  $items[WALLY_ADMIN_PATH] = array(
    'title' => 'Wally',
    'description' => t('Wally administration links'),
    'position' => 'right',
    'weight' => 5,
    'page callback' => 'system_admin_menu_block_page',
    'access callback' => TRUE,
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  
  $items['admin/content/clearcache'] = array(
    'title' => t('Clear cache'),
    'page callback' => 'wallyadmin_clear_cache',
    'description' => t('Clear the CSS cache and all database cache tables which store page, node, theme and variable caches.'),
    'access arguments' => array('manage cache'),
    'menu_name' => 'Clear Cache',
  );
  
  $items['admin/wally/searchcache'] = array(
    'title' => t('Search and manage cache'),
    'page callback' => 'search_cache_admin',
    'page arguments' => array('search_cache_admin'),
    'access arguments' => array('manage cache'),
    'description' => t('Allows administrators to search and manage cache.'),
    'file' => 'includes/searchcache.admin.inc',
  );
  
  $items['admin/wally/searchcache/key/%'] = array(
    'page callback' => 'del_cache_admin',
    'page arguments' => array('del_cache_admin'),
    'access arguments' => array('manage cache'),
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/searchcache.admin.inc',
  );
  
  $items['admin/wally/searchcache/viewkey/%'] = array(
    'page callback' => 'view_cache_admin',
    'page arguments' => array('view_cache_admin'),
    'access arguments' => array('manage cache'),
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/searchcache.admin.inc',
  );
  
  $items['admin/wally/searchvars'] = array(
    'title' => t('Search and export variables'),
    'page callback' => 'search_vars_admin',
    'access arguments' => array('manage variables'),
    'description' => t('Allows administrators to search and export variables.'),
    'file' => 'includes/searchvars.admin.inc',
  );
  
  $items['admin/wally/searchvars/key/%'] = array(
    'page callback' => 'export_vars_admin',
    'access arguments' => array('manage variables'),
    'page arguments' => array(4),
    'type' => MENU_CALLBACK,
    'file' => 'includes/searchvars.admin.inc',
  );
  
  $items['admin/wally/importvars'] = array(
    'title' => t('Import variables'),
    'page callback' => 'import_vars_admin',
    'access arguments' => array('manage variables'),
    'description' => t('Allows administrators to search and export variables.'),
    'file' => 'includes/searchvars.admin.inc',
  );
  
  $items['admin/wally/loginredirect'] = array(
    'title' => t('Redirection at login'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wallyadmin_page_form_login_redirection_form'),
    'access arguments' => array('administer users'),
    'description' => t('Configure redirection paths after login for existing roles.'),
    'file' => 'includes/wallyadmin.login_redirection.inc',
  );
  
  $items['admin/wally/menurestore'] = array(
    'title' => t('Restore menus'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wallyadmin_page_form_menu_restore_form'),
    'access arguments' => array('access administration pages'),
    'description' => t('Backup the menus tables or restore them.'),
    'file' => 'includes/wallyadmin.menu_restore.inc',
  );
  
  return $items;
}

/**
 * Implementation of hook_menu_alter().
 *
 * Expose a few more items to the Admin Toolbar
 */
function wallyadmin_menu_alter(&$items) {
  // Hide the default node edit
  $items['admin/content/node']['options']['admin'] = FALSE;
  
  // Enable the Content Management Filter
  $items['admin/content/filter']['title'] = 'Find Content';
  $items['admin/content/filter']['options']['admin'] = TRUE;
  
  // Enable Reports
  $items['admin/reports']['options']['admin'] = TRUE;
  $items['admin/reports/updates']['options']['admin'] = TRUE;
  $items['admin/reports/status']['options']['admin'] = TRUE;
  
  
  //Enable some often-used pathes, on the quick bar, for convenience:
  $items['admin/content/taxonomy']['options']['admin'] = TRUE;
  $items['admin/content/clearcache']['options']['admin'] = TRUE;
   
  $items['admin/build/context']['options']['admin'] = TRUE;
  $items['admin/build/modules']['options']['admin'] = TRUE;
  $items['admin/build/features']['options']['admin'] = TRUE;
  $items['admin/build/panels']['options']['admin'] = TRUE;
    
    //-- And if we have context, I guess we don't need blocks UI :)
  $items['admin/user/roles']['options']['admin'] = TRUE;
}

/**
 * Implementation of hook_user.
 * Implements redirection by role after login
 */
function wallyadmin_user($op, &$edit, &$account, $category = NULL) {
  switch ($op) {
    case 'login':
      $roles = user_roles();
      $user_roles = array_keys($account->roles);
      $rid = array_shift($user_roles);
      while (count($user_roles) && (!array_key_exists($rid, $roles) || $account->roles[$rid] == 'anonymous user' || $account->roles[$rid] == 'authenticated user')) {
        $rid = array_shift($user_roles);
      }
      $redirect_path = variable_get('wallyadmin_redirection_'.$rid, FALSE);
      if ($redirect_path) {
        drupal_goto($redirect_path);
      }
      break;
    default:
  }
}

/**
* Ability to flush all caches even if devel module is not installed (i.e. in production).
*/
function wallyadmin_clear_cache() {
  drupal_flush_all_caches();
  drupal_set_message('Cache cleared.');
  drupal_goto($_SERVER['HTTP_REFERER']);
}
