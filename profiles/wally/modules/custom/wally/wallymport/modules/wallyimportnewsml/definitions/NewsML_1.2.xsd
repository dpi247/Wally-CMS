<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	NewsML Schema Version 1.2
	This Schema represents 
	the same document structure as the NewsML DTD version 1.2
	
	International Press Telecommunications Council
	specifications for version 1.2  approved 10 October 2003
	Copyright (c) IPTC 2000 - 2003
	All rights reserved
	NewsML is a trademark of IPTC
	
	
	DO NOT REMOVE THESE LICENCE CONDITIONS
	
IPTC - International Press Telecommunications Council
20 Garrick Street, London WC2E 9BT, United Kingdom 
www.iptc.org

Non-Exclusive License Agreement for International Press
Telecommunications Council Specifications and Related Documentation

IMPORTANT: International Press Telecommunications Council (IPTC)
standard specifications for news (the Specifications) and supporting
software, documentation, technical reports, web sites and other
material related to the Specifications (the Materials) including the
document accompanying this license (the Document), whether in a paper
or electronic format, are made available to you subject to the terms
stated below. By obtaining, using and/or copying the Specifications or
Materials, you (the licensee) agree that you have read, understood,
and will comply with the following terms and conditions.

1. The Specifications and Materials are licensed for use only on the
condition that you agree to be bound by the terms of this license.
Subject to this and other licensing requirements contained herein, you
may, on a non-exclusive basis, use the Specifications and Materials.

2. The IPTC openly provides the Specifications and Materials for
voluntary use by individuals, partnerships, companies, corporations,
organizations and any other entity for use at the entity's own risk.
This disclaimer, license and release is intended to apply to the IPTC,
its officers, directors, agents, representatives, members,
contributors, affiliates, contractors, or co-venturers acting jointly
or severally.

3. The Document and translations thereof may be copied and furnished
to others, and derivative works that comment on or otherwise explain
it or assist in its implementation may be prepared, copied, published
and distributed, in whole or in part, without restriction of any kind,
provided that the copyright and license notices and references to the
IPTC appearing in the Document and the terms of this Specifications
License Agreement are included on all such copies and derivative
works. Further, upon the receipt of written permission from the IPTC,
the Document may be modified for the purpose of developing
applications that use IPTC Specifications or as required to translate
the Document into languages other than English.

4. Any use, duplication, distribution, or exploitation of the Document
and Specifications and Materials in any manner is at your own risk.

5. NO WARRANTY, EXPRESSED OR IMPLIED, IS MADE REGARDING THE ACCURACY,
ADEQUACY, COMPLETENESS, LEGALITY, RELIABILITY OR USEFULNESS OF ANY
INFORMATION CONTAINED IN THE DOCUMENT OR IN ANY SPECIFICATION OR OTHER
PRODUCT OR SERVICE PRODUCED OR SPONSORED BY THE IPTC. THE DOCUMENT AND
THE INFORMATION CONTAINED HEREIN AND INCLUDED IN ANY SPECIFICATION OR
OTHER PRODUCT OR SERVICE OF THE IPTC IS PROVIDED ON AN "AS IS" BASIS.
THE IPTC DISCLAIMS ALL WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING, BUT NOT LIMITED TO, ANY ACTUAL OR ASSERTED WARRANTY OF NON-
INFRINGEMENT OF PROPRIETARY RIGHTS, MERCHANTABILITY, OR FITNESS FOR A
PARTICULAR PURPOSE. NEITHER THE IPTC NOR ITS CONTRIBUTORS SHALL BE
HELD LIABLE FOR ANY IMPROPER OR INCORRECT USE OF INFORMATION. NEITHER
THE IPTC NOR ITS CONTRIBUTORS ASSUME ANY RESPONSIBILITY FOR ANYONE'S
USE OF INFORMATION PROVIDED BY THE IPTC. IN NO EVENT SHALL THE IPTC OR
ITS CONTRIBUTORS BE LIABLE TO ANYONE FOR DAMAGES OF ANY KIND,
INCLUDING BUT NOT LIMITED TO, COMPENSATORY DAMAGES, LOST PROFITS, LOST
DATA OR ANY FORM OF SPECIAL, INCIDENTAL, INDIRECT, CONSEQUENTIAL OR
PUNITIVE DAMAGES OF ANY KIND WHETHER BASED ON BREACH OF CONTRACT OR
WARRANTY, TORT, PRODUCT LIABILITY OR OTHERWISE.

6. The IPTC takes no position regarding the validity or scope of any
Intellectual Property or other rights that might be claimed to pertain
to the implementation or use of the technology described in the
Document or the extent to which any license under such rights might or
might not be available. The IPTC does not represent that it has made
any effort to identify any such rights. Copies of claims of rights
made available for publication, assurances of licenses to be made
available, or the result of an attempt made to obtain a general
license or permission for the use of such proprietary rights by
implementers or users of the Specifications and Materials, can be
obtained from the Managing Director of the IPTC.

7. By using the Specifications and Materials including the Document in
any manner or for any purpose, you release the IPTC from all
liabilities, claims, causes of action, allegations, losses, injuries,
damages, or detriments of any nature arising from or relating to the
use of the Specifications, Materials or any portion thereof. You
further agree not to file a lawsuit, make a claim, or take any other
formal or informal legal action against the IPTC, resulting from your
acquisition, use, duplication, distribution, or exploitation of the
Specifications, Materials or any portion thereof. Finally, you hereby
agree that the IPTC is not liable for any direct, indirect, special or
consequential damages arising from or relating to your acquisition,
use, duplication, distribution, or exploitation of the Specifications,
Materials or any portion thereof.

8. Specifications and Materials may be downloaded or copied provided
that ALL copies retain the ownership, copyright and license notices.

9. Materials may not be edited, modified, or presented in a context
that creates a misleading or false impression or statement as to the
positions, actions, or statements of the IPTC.

10. The name and trademarks of the IPTC may not be used in
advertising, publicity, or in relation to products or services and
their names without the specific, written prior permission of the
IPTC. Any permitted use of the trademarks of the IPTC, whether
registered or not, shall be accompanied by an appropriate mark and
attribution, as agreed with the IPTC.

11. Specifications may be extended by both members and non-members to
provide additional functionality (Extended Specifications) provided
that there is a clear recognition of the IPTC IP and its ownership in
the Extended Specifications and the related documentation and provided
that the extensions are clearly identified and provided that a
perpetual license is granted by the creator of the Extended
Specifications for other members and non-members to use the Extended
Specifications and to continue extensions of the Extended
Specifications. The IPTC does not waive any of its rights in the
Specifications and Materials in this context. The Extended
Specifications may be considered the intellectual property of their
creator. The IPTC expressly disclaims any responsibility for damage
caused by an extension to the Specifications.

12. Specifications and Materials may be included in derivative work of
both members and non-members provided that there is a clear
recognition of the IPTC IP and its ownership in the derivative work
and its related documentation. The IPTC does not waive any of its
rights in the Specifications and Materials in this context. Derivative
work in its entirety may be considered the intellectual property of
the creator of the work .The IPTC expressly disclaims any
responsibility for damage caused when its IP is used in a derivative
context.

13. This Specifications License Agreement is perpetual subject to your
conformance to the terms of this Agreement. The IPTC may terminate
this Specifications License Agreement immediately upon your breach of
this Agreement and, upon such termination you will cease all use,
duplication, distribution, and/or exploitation in any manner of the
Specifications and Materials.

14. This Specifications License Agreement reflects the entire
agreement of the parties regarding the subject matter hereof and
supersedes all prior agreements or representations regarding such
matters, whether written or oral. To the extent any portion or
provision of this Specifications License Agreement is found to be
illegal or unenforceable, then the remaining provisions of this
Specifications License Agreement will remain in full force and effect
and the illegal or unenforceable provision will be construed to give
it such effect as it may properly have that is consistent with the
intentions of the parties.

15. This Specifications License Agreement may only be modified in
writing signed by an authorized representative of the IPTC.

16. This Specifications License Agreement is governed by the law of
United Kingdom, as such law is applied to contracts made and fully
performed in the United Kingdom. Any disputes arising from or relating
to this Specifications License Agreement will be resolved in the
courts of the United Kingdom. You consent to the jurisdiction of such
courts over you and covenant not to assert before such courts any
objection to proceeding in such forums.

IF YOU DO NOT AGREE TO THESE TERMS YOU MUST CEASE ALL USE OF THE
SPECIFICATIONS AND MATERIALS NOW. IF YOU HAVE ANY QUESTIONS ABOUT
THESE TERMS, PLEASE CONTACT THE MANAGING DIRECTOR OF THE INTERNATIONAL
PRESS TELECOMMUNICATION COUNCIL. AS OF THE DATE OF THIS REVISION OF
THIS SPECIFICATIONS LICENSE AGREEMENT YOU MAY CONTACT THE IPTC at
http://www.iptc.org.

License agreement version of: 30 January 2006
	
	NOTE ON SPELLING
	
	NewsML element and attribute names use US-English spellings. With this
	exception, this schema and its accompanying specification use British English
	spellings.
	
-->
<xs:schema xmlns="http://iptc.org/std/NewsML/2003-10-10/" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://iptc.org/std/NewsML/2003-10-10/" elementFormDefault="qualified">
	<xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
	<xs:annotation>
		<xs:documentation>IPTC NewsML 1.2 XML Schema, version 4</xs:documentation>
		<xs:documentation>urn:iptc:std-draft:NewsML:1.0:spec:xmlschema:4</xs:documentation>
		<xs:documentation>XML Schema created by Takhiro Fujiwara (East Co Ltd.), Dean Large and Jayson Lorenzen (Business Wire) </xs:documentation>
		<xs:documentation>This document version was created on 2008-07-17</xs:documentation>
	</xs:annotation>
	<xs:element name="NewsML">
		<xs:annotation>
			<xs:documentation>A NewsML document, which must contain a NewsEnvelope and one or more NewsItems, and may include a Catalog element and a TopicSet element. The Version attribute, introduced in version 1.1, is used to signify the version of NewsML that the instance is validated against. It should always be used if the version is above 1.0. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
				<xs:element name="TopicSet" type="TopicSetType" minOccurs="0" maxOccurs="unbounded"/>
				<xs:sequence>
					<xs:element name="NewsEnvelope">
						<xs:annotation>
							<xs:documentation>Information about the transmission of one or more NewsItems as a NewsML document.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="TransmissionId" minOccurs="0">
									<xs:annotation>
										<xs:documentation>An identifier for the NewsML document transmission. This should be unique among all distinct transmissions from the same publisher. If a transmission is repeated (perhaps because the sender is not confident that it was successfully received) then the same TransmissionId content may be used, but a Repeat attribute should be provided to distinguish the second transmission from the first. The form that the value of the Repeat attribute takes is determined by the provider.  Likewise, the format for the TransmissionId itself is for the provider to decide. It could for example consist of a channel identifier followed by a sequence number.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:simpleContent>
											<xs:extension base="xs:string">
												<xs:attributeGroup ref="localid"/>
												<xs:attribute name="Repeat" type="xs:string"/>
											</xs:extension>
										</xs:simpleContent>
									</xs:complexType>
								</xs:element>
								<xs:element name="SentFrom" minOccurs="0">
									<xs:annotation>
										<xs:documentation>An individual and/or company or organisation from whom the NewsML document is being sent.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:group ref="party"/>
										</xs:sequence>
										<xs:attributeGroup ref="localid"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="SentTo" minOccurs="0">
									<xs:annotation>
										<xs:documentation>An individual and/or company or organisation to whom the NewsML document is being sent.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:sequence>
											<xs:group ref="party"/>
										</xs:sequence>
										<xs:attributeGroup ref="localid"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="DateAndTime" type="DateAndTimeType"/>
								<xs:element name="NewsService" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>An identifier for a service to which all the NewsItems in a NewsML document belong. The value of the FormalName attribute is a formal name for the NewsService. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:attributeGroup ref="localid"/>
										<xs:attributeGroup ref="formalname"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="NewsProduct" minOccurs="0" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>An identifier for a product to which all the NewsItems in a NewsML document belong. The value of the FormalName attribute is a formal name for the NewsProduct. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:attributeGroup ref="localid"/>
										<xs:attributeGroup ref="formalname"/>
									</xs:complexType>
								</xs:element>
								<xs:element name="Priority" minOccurs="0">
									<xs:annotation>
										<xs:documentation>An indication of the priority notation of a NewsItem. The value of the FormalName attribute is a formal name for the Priority. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:attributeGroup ref="localid"/>
										<xs:attributeGroup ref="formalname"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
							<xs:attributeGroup ref="localid"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="NewsItem" type="NewsItemType" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:sequence>
			<xs:attributeGroup ref="localid"/>
			<xs:attribute name="Version">
				<xs:annotation>
					<xs:documentation>The Version attribute, introduced in version 1.1, is used to signify the version of NewsML that the instance is validated against. It should always be used if the version is above 1.0.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="1\.[12]"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:attributeGroup name="assignment">
		<xs:attribute name="AssignedBy" type="xs:string">
			<xs:annotation>
				<xs:documentation>An identifier for the party assigning a piece of metadata. This can be a string that designates the party informally (for example, a person's name), or a pointer in the form a fragment identifier consisting of a # character followed by the Duid of a Topic corresponding to the party.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Importance" type="xs:string">
			<xs:annotation>
				<xs:documentation>An indication of the importance the party assigning a piece of metadata attaches to it. The value of the Importance attribute is a formal name for a level of importance. Its meaning and permitted values are determined by a controlled vocabulary.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Confidence" type="xs:string">
			<xs:annotation>
				<xs:documentation>An indication of the confidence with which a piece of metadata has been assigned. The value of the Confidence attribute is a formal name for a degree of confidence. Its meaning and permitted values are determined by a controlled vocabulary.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HowPresent" type="xs:string">
			<xs:annotation>
				<xs:documentation>An indication of the way in which a piece of metadata applies.  The value of the HowPresent attribute is a formal name for the way the metadata applies. Its meaning and permitted values are determined by a controlled vocabulary.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DateAndTime" type="NewsMLDateTime">
			<xs:annotation>
				<xs:documentation>The date and (optionally) time at which a piece of metadata was assigned.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="formalname">
		<xs:attribute name="FormalName" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>A string of characters whose meaning is determined by a controlled vocabulary. The controlled vocabulary may (but is not required to) take the form of a NewsML TopicSet.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Vocabulary" type="xs:string">
			<xs:annotation>
				<xs:documentation>The Vocabulary attribute, if present, provides a pointer to a TopicSet which is the controlled vocabulary that can be used to resolve the meaning of the FormalName. The value of the Vocabulary attribute is an http URL or a NewsML URN, or the # character followed by the value of the Duid attribute of the a TopicSet in the current document. If there is no Vocabulary attribute, then the controlled vocabulary to be used is located by the following algorithm: - Proceed to the parent of the current element. - If it has a Catalog element as its immediate child, see whether that Catalog contains a Resource element whose DefaultVocabularyFor child contains an XPath pattern that is matched by the current element. If so, then the controlled vocabulary is the resource identified by that Resource element. - If the parent does not meet the above condition, proceed to its parent and check the same condition. - Continue until a vocabulary is found, or no further parent elements are available because the root element has been reached and it too fails to meet the condition.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Scheme" type="xs:string">
			<xs:annotation>
				<xs:documentation>The Scheme attribute, if present, serves to distinguish which of possibly multiple naming schemes in the controlled vocabulary is the one that governs this FormalName. For a match to be obtained within the controlled vocabulary, the rule is that the FormalName and the Scheme must both match. If there is a Scheme attribute on the current element, then both the FormalName and the Scheme in the controlled vocabulary must match. The controlled vocabulary will be located either through the Vocabulary attribute (if present) or through the appropriate Catalog entry where the Context matches the current element. If a Vocabulary attribute is present that points to a TopicSet then the FormalName may be resolved using this TopicSet. This overrides any relevant Catalog entry.  If there is no Scheme attribute on the current element and no Vocabulary attribute then a Scheme may be assigned through as follows: If the Catalog, within the instance or externally referenced from the instance, contains a Resource element with a DefaultVocabularyFor child element with a Context attribute that matches the current element and a Scheme attribute with a value declared, then this Scheme may be applied when resolving the current element FormalName. If the DefaultVocabularyFor has no Scheme value then a match will be to an item in the vocabulary that has the current FormalName and no Scheme.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="localid">
		<xs:attribute name="Duid" type="xs:ID">
			<xs:annotation>
				<xs:documentation>Duid is a "Document-unique Identifier". It must satisfy the rules for XML ID attributes: it must only contain name characters, and it must start with a name-start character (not a digit). Its value must be unique within any NewsML document. Every NewsML element type has Duid as an optional attribute.  Combined with the Identifier element, providing a value for the Duid of any element in a NewsML document makes the element globally identifiable. The Identifier element gives global identification to the document, and the Duid provides local identification for the element within the document.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Euid" type="xs:string">
			<xs:annotation>
				<xs:documentation>Euid is an "Element-unique Identifier". Its value must be unique among elements of the same element-type and having the same parent element. Use of Euid attribute makes it possible to identify any NewsML element within the context of its local branch of the NewsML document tree. This makes it possible to copy, or include by reference, subtrees into new combinations in ways that would break the uniqueness of Duids (thereby forcing new Duids to be allocated), but still being able to retain the identity of each element. If Euids are maintained at every level, it is possible to identify, for example "The ContentItem whose Euid is abc within the NewsComponent whose Euid is def". Such identification patterns would be preserved even after "pruning and grafting" of subtrees.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:group name="data">
		<xs:annotation>
			<xs:documentation>Where data is included, it may be directly in the form of a DataContent element, or in the form of DataContent wrapped in an Encoding element, or by reference through an Href attribute. In the latter case an empty Encoding element may be present.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Encoding" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The encoding of the data comprising the content of a ContentItem.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:group ref="data"/>
					</xs:choice>
					<xs:attributeGroup ref="localid"/>
					<xs:attribute name="Notation" type="xs:string" use="required"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DataContent" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The data that carries the content of a ContentItem.</xs:documentation>
				</xs:annotation>
				<xs:complexType mixed="true">
					<xs:complexContent mixed="true">
						<xs:restriction base="xs:anyType">
							<xs:sequence>
								<xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
							<xs:attributeGroup ref="localid"/>
						</xs:restriction>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:group>
	<xs:group name="party">
		<xs:annotation>
			<xs:documentation>Person, organisation or company playing a specific role in the news workflow. The role being played is determined by the parent element. More information about it can be provided in the optional Comment subelements.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Party" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>An indication of the person, company or organisation that has a particular relationship to this NewsItem in the news workflow. The value of the FormalName attribute is a formal name for the Party. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above. The optional Topic attribute may be used as a direct pointer to that Topic. The pointer may take the form of an http URL or a NewsML URN, or a # character followed by the value of the Duid attribute of a Topic element in the current document. The Property child element eliminates the need for creation of ad-hoc topics for volatile information internal to a NewsML document (eg the name of the person involved in editing of the story, which is usually internal information to the provider).</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Property" type="PropertyType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
					<xs:attributeGroup ref="formalname"/>
					<xs:attribute name="Topic" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:simpleType name="NewsMLDateTime">
		<xs:annotation>
			<xs:documentation> The date and (optionally) time at which a piece of metadata was assigned. 
				Uses the format YYYYMMDDTHHMMSS{+or-}HHMM (year, month, day, time separator, hours, minutes, seconds, timezone separator, hours, minutes). If only the Date is needed, then the substring from T onwards may be omitted. Where the offset difference is +0000 the letter suffix "Z" may alternatively be used. 
				This is the Basic Format defined by ISO 8601.  YYYY is a 4-digit year number. MM is a 2-digit month number. DD is a 2-digit day number. T is the letter 'T'. HH is a 2-digit hour number (using a 24-hour clock). MM is a 2 digit minute number. (Note that midnight may be represented as 240000 on the date of the day that is ending, or as 000000 on the date of the day that is beginning.) 
				{+or-} is the '+' character or the '-' character, and the following HHMM are hours and minutes of offset from Universal Co-ordinated Time (UTC) as defined by ISO 8601. If the time is being expressed in UTC, then the timezone offset may be '+0000' or '-0000'. If the time is behind UTC, the timezone separator is '-'. If the time is ahead of UTC the timezone separator is '+'.
				Example: 10:27 p.m. in New York on 31 December 2000 would be expressed as "20001231T222700-0500" as New York is five hours behind UTC in winter. At the same moment in London, the date and time would be expressed as "20010101T032700+0000" or as "20010101T032700-0000" because in London it is now 3:27 a.m. on 1 January 2001. At the same moment in Paris,the date and time would be expressed as "20010101T042700+0100", because Paris is one hour ahead of UTC in winter and it is now 4:27 a.m. on 1 January 2001</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="(19[0-9][0-9]|20[0-9][0-9]|21[0-9][0-9])(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(T(([0-1][0-9]|2[0-3])([0-5][0-9][0-5][0-9])|240000)(Z|[+\-](0[0-9]|1[0-1])([0-5][0-9]|1200))?)?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="NewsMLDate">
		<xs:annotation>
			<xs:documentation>The date and without time at which a piece of metadata was assigned.  Uses the format YYYYMMDD (year, month, day) This is the Basic Format defined by ISO 8601. YYYY is a 4-digit year number. MM is a 2-digit month number. DD is a 2-digit day number. Example: 31st of December in 2000 would be expressed as "20001231".</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="(19[0-9][0-9]|20[0-9][0-9]|21[0-9][0-9])(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="updateType">
		<xs:annotation>
			<xs:documentation>Value restricted to "U", "A" or "N".</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="U"/>
			<xs:enumeration value="A"/>
			<xs:enumeration value="N"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="CatalogType">
		<xs:annotation>
			<xs:documentation>A container for Resource and TopicUse elements. Resource elements map URNs to URLs and indicate default vocabularies which apply to the formal names of certain elements within the subtree that begins with the immediate parent of the Catalog element. TopicUse elements indicate where in the NewsML document certain Topics are used. The optional Href attribute provides a pointer to a Catalog element elsewhere in this or another document. Its value consists of a # character followed by the value of the Duid attribute of the referenced Catalog element and preceded, if the referenced Catalog is not in the current document, by an http URL or a NewsML URN identifying the document or NewsItem in which the Catalog appears. If the Href attribute is present on a Catalog element, then that element should be empty. If it contains subelements, the NewsML system may signal an error.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Resource" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>An indication where a given resource can be found, and whether it is to be used as the default vocabulary for certain formal names within the current subtree of a NewsML document. The Urn attribute provides a NewsML URN for the resource. The Url attribute(s) provide(s) a location or locations where the resource may be found. The DefaultVocabularyFor element contains an XPath pattern. The identified resource acts as default vocabulary for any element within the subtree whose root is the parent of the current Catalog, that matches this XPath pattern.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Urn" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A URN that provides a global identifier for a resource. This will typically (but not necessarily) be a NewsML URN as described in the comment to PublicIdentifier.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attributeGroup ref="localid"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Url" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>A URL that can be used to locate a Resource.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attributeGroup ref="localid"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="DefaultVocabularyFor" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An indication that the parent Resource provides the default vocabulary that determines the meanings and permitted values of the data occurring in a particular part of a NewsML document subtree. The Context attribute is an XPath pattern identifying the data to which the default vocabulary applies. If the XPath pattern is one that matches elements, then it is the value of the FormalName attribute of that element that is designated. If the XPath pattern is one that matches attributes, then it is the value of that attribute itself that is designated. The optional Scheme attribute identifies the relevant naming scheme if the Resource contains more than one naming scheme. If the Resource is a NewsML TopicSet, then the meaning of the data identified by the Context is provided by the Topic whose FormalName subelement matches that data. If the Resource is not a NewsML TopicSet, then the way in which it is interpreted in order to provide a meaning for the data is not defined by NewsML but by the authority that governs whatever format the Resource uses.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute name="Context" type="xs:string" use="required"/>
								<xs:attribute name="Scheme" type="xs:string"/>
							</xs:complexType>
							<!--
									Example:
									<NewsComponent>
									<Catalog>
									<Resource Duid="resource1">
									<Urn>urn:newsml:iptc.org:20001006:Confidence:1</Urn>
									<Url>www.iptc.org/NewsML/topicsets/iptc-confidence.xml</Url>
									<DefaultVocabularyFor Context="@Confidence"/>
									</Resource>
									<Resource Duid="resource2">
									<Urn>urn:newsml:iptc.org:20001006:Confidence:1</Urn>
									<Url>www.iptc.org/NewsML/topicsets/iptc-confidence.xml</Url>
									<DefaultVocabularyFor Context="@Confidence"/>
									</Resource>
									<Resource Duid="resource3">
									<Urn>urn:newsml:iptc.org:20001006:HowPresent:1</Urn>
									<Url>www.iptc.org/NewsML/topicsets/iptc-howpresent.xml</Url>
									<DefaultVocabularyFor Context="@HowPresent"/>
									</Resource>
									</Catalog>
									<TopicSet FormalName="Person">
									<Topic Duid="topic1">
									<TopicType FormalName="Person">
									<Description Variant="Name">Bill Clinton</Description>
									<Description Variant="Position">President of the USA</Description>
									</TopicType>
									</Topic>
									</TopicSet>
									</DescriptiveMetadata>
									<TopicOccurrence
									AssignedBy="Desk Editor"
									Confidence="High"
									HowPresent="Primary"
									Topic="#topic1"/>
									</DescriptiveMetadata>
									...
									</NewsComponent>
								-->
						</xs:element>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="TopicUse" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>An indication of where a particular Topic is used in a NewsML document. The value of the Topic attribute must consist of a # character followed by the value of the Duid of a Topic in the current document. The value of the Context attribute is an XPath pattern indicating the context where the referenced topic is used within the subtree to which the current Catalog applies. If the Context attribute is not present, the TopicUse element simply states that this topic is present somewhere in the subtree.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="Topic" type="xs:string" use="required"/>
					<xs:attribute name="Context" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="localid"/>
		<xs:attribute name="Href" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="CommentType">
		<xs:annotation>
			<xs:documentation>A natural-language description of, or statement about, the current element. The optional TranslationOf attribute is a pointer to another Comment element, of which this one is a direct translation. The FormalName and associated attributes were added in version 1.1</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attributeGroup ref="localid"/>
				<xs:attribute ref="xml:lang" use="optional"/>
				<xs:attribute name="TranslationOf" type="xs:IDREF"/>
				<xs:attribute name="FormalName" type="xs:string"/>
				<xs:attribute name="Vocabulary" type="xs:string"/>
				<xs:attribute name="Scheme" type="xs:string"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ContributionType">
		<xs:annotation>
			<xs:documentation>The contribution of a Party in the scope of the creation or the modification of a news object.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="localid"/>
		<xs:attributeGroup ref="formalname"/>
	</xs:complexType>
	<xs:complexType name="DateAndTimeType">
		<xs:annotation>
			<xs:documentation>A formal representation of a date and, optionally, time, expressed in ISO 8601 Basic Format, as described in the comment to the NewsMLDateTime simple type declaration above.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="NewsMLDateTime">
				<xs:attributeGroup ref="localid"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="NewsComponentType">
		<xs:annotation>
			<xs:documentation>A container for news objects, used to identify the role of news objects in relation to one another, and to ascribe metadata to them. The Essential attribute indicates whether the provider considers that this NewsComponent is essential to the meaning of the NewsComponent within which it is contained. The EquivalentsList attribute indicates whether or not the NewsItems or NewsItemRefs, NewsComponents or ContentItems contained within this one are equivalent to one another in content and/or meaning</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
			<xs:element name="TopicSet" type="TopicSetType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Role" minOccurs="0">
				<xs:annotation>
					<xs:documentation>An identifier of the role played by a NewsComponent within a NewsComponent that contains it. The outermost NewsComponent within a NewsItem need not specify a Role attribute value. The value of the FormalName attribute is a formal name for the Role. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attributeGroup ref="localid"/>
					<xs:attributeGroup ref="formalname"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="BasisForChoice" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The content of this element is an XPath statement or element-type name identifying information within each NewsComponent or ContentItem that can be used as a basis for choice between equivalent NewsComponents or ContentItems. If the XPath pattern begins with a . character, this represents the 'root' of the XPath and corresponds to the NewsComponent or ContentItem itself. By applying the XPath pattern to each NewsComponent or ContentItem in turn within the set of equivalents, the system can extract the data on the basis of which a choice between the items can be made. If multiple matches to the XPath pattern are present within the subtree that begins at the 'root', only the first match found in document order is significant. The optional Rank attribute allows providers to place a numerical order on the importance they think should be attached to the different bases for choice.  Smaller numbers represent higher importance.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attributeGroup ref="localid"/>
							<xs:attribute name="Rank" type="xs:positiveInteger"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="NewsLines" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A container for all the NewsLines that a NewsComponent has. Made an "or" group  and ByLineTitle added in version 1.1</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:sequence>
							<xs:element name="HeadLine">
								<xs:annotation>
									<xs:documentation>A displayable headline.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:choice minOccurs="0" maxOccurs="unbounded">
										<xs:element name="Origin" type="OriginType"/>
									</xs:choice>
									<xs:attributeGroup ref="localid"/>
									<xs:attribute ref="xml:lang" use="optional"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="SubHeadLine" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>A displayable subsidiary headline.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:choice minOccurs="0" maxOccurs="unbounded">
										<xs:element name="Origin" type="OriginType"/>
									</xs:choice>
									<xs:attributeGroup ref="localid"/>
									<xs:attribute ref="xml:lang" use="optional"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:sequence>
							<xs:element name="ByLine">
								<xs:annotation>
									<xs:documentation>A natural-language statement of the author/creator information.</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:choice minOccurs="0" maxOccurs="unbounded">
										<xs:element name="Origin" type="OriginType"/>
									</xs:choice>
									<xs:attributeGroup ref="localid"/>
									<xs:attribute ref="xml:lang" use="optional"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="ByLineTitle" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>A natural-language statement of the title of author/creator of the information. (added in version 1.1)</xs:documentation>
								</xs:annotation>
								<xs:complexType mixed="true">
									<xs:choice minOccurs="0" maxOccurs="unbounded">
										<xs:element name="Origin" type="OriginType"/>
									</xs:choice>
									<xs:attributeGroup ref="localid"/>
									<xs:attribute ref="xml:lang" use="optional"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:element name="DateLine">
							<xs:annotation>
								<xs:documentation>A natural-language statement of the date and/or place of creation.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:choice minOccurs="0" maxOccurs="unbounded">
									<xs:element name="Origin" type="OriginType"/>
								</xs:choice>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute ref="xml:lang" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="CreditLine">
							<xs:annotation>
								<xs:documentation>A natural-language statement of credit information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:choice minOccurs="0" maxOccurs="unbounded">
									<xs:element name="Origin" type="OriginType"/>
								</xs:choice>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute ref="xml:lang" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="CopyrightLine">
							<xs:annotation>
								<xs:documentation>A natural-language statement of the copyright information.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:choice minOccurs="0" maxOccurs="unbounded">
									<xs:element name="Origin" type="OriginType"/>
								</xs:choice>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute ref="xml:lang" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="RightsLine">
							<xs:annotation>
								<xs:documentation>A displayable version of rights information. Note that this is distinct from copyright information. Copyright information is about who owns a news object; rights information is about who is allowed to use it, in what way and under what circumstances.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:choice minOccurs="0" maxOccurs="unbounded">
									<xs:element name="Origin" type="OriginType"/>
								</xs:choice>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute ref="xml:lang" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="SeriesLine">
							<xs:annotation>
								<xs:documentation>A displayable version of information about a news object's place in a series.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:choice minOccurs="0" maxOccurs="unbounded">
									<xs:element name="Origin" type="OriginType"/>
								</xs:choice>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute ref="xml:lang" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="SlugLine">
							<xs:annotation>
								<xs:documentation>A string of text, possibly embellished by hyperlinks and/or formatting, used to display a NewsItem's slug line. (Note that the meaning of the term "slug line", and the uses to which it is put, are a matter for individual providers to define within their own workflow and business practice.)</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:choice minOccurs="0" maxOccurs="unbounded">
									<xs:element name="Origin" type="OriginType"/>
								</xs:choice>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute ref="xml:lang" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="KeywordLine">
							<xs:annotation>
								<xs:documentation>A displayable set of keywords relevant to a news object. This can be used by a NewsML system to assist manual or automated searches.</xs:documentation>
							</xs:annotation>
							<xs:complexType mixed="true">
								<xs:choice minOccurs="0" maxOccurs="unbounded">
									<xs:element name="Origin" type="OriginType"/>
								</xs:choice>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute ref="xml:lang" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="NewsLine">
							<xs:annotation>
								<xs:documentation>A newsline of a type not included in the NewsML specification.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="NewsLineType">
										<xs:annotation>
											<xs:documentation>An indication of a user-defined NewsLine type. The value of the FormalName attribute is a formal name for the NewsLineType. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attributeGroup ref="localid"/>
											<xs:attributeGroup ref="formalname"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="NewsLineText" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>The text of a NewsLine of user-defined type.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Origin" type="OriginType"/>
											</xs:choice>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute ref="xml:lang" use="optional"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
							</xs:complexType>
						</xs:element>
					</xs:choice>
					<xs:attributeGroup ref="localid"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="AdministrativeMetadata" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information about the provenance of a NewsComponent.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
						<xs:element name="FileName" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The suggested or actual storage file name for a NewsItem.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attributeGroup ref="localid"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="SystemIdentifier" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A system identifier (in the sense defined by the XML 1,0 Specification) for a NewsItem.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attributeGroup ref="localid"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Provider" minOccurs="0">
							<xs:annotation>
								<xs:documentation>An individual and/or company or organisation that released a news object for publication.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:group ref="party"/>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Creator" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An individual and/or company or organisation that created a news object.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:group ref="party"/>
									<xs:element name="Contribution" type="ContributionType" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Source" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An individual and/or company or organisation that provided source material for a news object. The optional NewsItem attribute must be present in the case of a syndicated NewsItem. It provides the URN of the NewsItem that is being syndicated. Note that a sequence of Source elements can be used to indicate the sequence of syndicators through which a NewsItem has passed.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:group ref="party"/>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute name="NewsItem" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Contributor" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An individual and/or company or organisation that modified or enhanced a news object after its creation.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:group ref="party"/>
									<xs:element name="Contribution" type="ContributionType" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Property" type="PropertyType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="RightsMetadata" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Information about the rights pertaining to a NewsComponent.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
						<xs:element name="Copyright" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>The copyright that pertains to a news object.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
									<xs:element name="CopyrightHolder">
										<xs:annotation>
											<xs:documentation>A natural-language statement indicating who owns the copyright.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Origin" type="OriginType"/>
											</xs:choice>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute ref="xml:lang" use="optional"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="CopyrightDate">
										<xs:annotation>
											<xs:documentation>A natural-language statement of the copyright date.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Origin" type="OriginType"/>
											</xs:choice>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute ref="xml:lang" use="optional"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="assignment"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="UsageRights" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Information about the usage rights pertaining to a NewsComponent.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="UsageType" minOccurs="0">
										<xs:annotation>
											<xs:documentation>A natural-language indication of the type of usage to which the rights apply.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Origin" type="OriginType"/>
											</xs:choice>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute ref="xml:lang" use="optional"/>
											<xs:attributeGroup ref="assignment"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="Geography" minOccurs="0">
										<xs:annotation>
											<xs:documentation>A natural-language statement of the geographical area or areas to which specified usage rights apply.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Origin" type="OriginType"/>
											</xs:choice>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute ref="xml:lang" use="optional"/>
											<xs:attributeGroup ref="assignment"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="RightsHolder" minOccurs="0">
										<xs:annotation>
											<xs:documentation>A string of text indicating who has the usage rights, optionally enriched with pointers to further information about the relevant people, companies or organisations.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Origin" type="OriginType"/>
											</xs:choice>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute ref="xml:lang" use="optional"/>
											<xs:attributeGroup ref="assignment"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="Limitations" minOccurs="0">
										<xs:annotation>
											<xs:documentation>A natural-language statement of the terms and conditions that apply to the specified usage rights.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Origin" type="OriginType"/>
											</xs:choice>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute ref="xml:lang" use="optional"/>
											<xs:attributeGroup ref="assignment"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="StartDate" minOccurs="0">
										<xs:annotation>
											<xs:documentation>A natural-language statement of the date at which specified usage rights come into effect.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Origin" type="OriginType"/>
											</xs:choice>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute ref="xml:lang" use="optional"/>
											<xs:attributeGroup ref="assignment"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="EndDate" minOccurs="0">
										<xs:annotation>
											<xs:documentation>A natural-language statement of the date at which specified usage rights come to an end.</xs:documentation>
										</xs:annotation>
										<xs:complexType mixed="true">
											<xs:choice minOccurs="0" maxOccurs="unbounded">
												<xs:element name="Origin" type="OriginType"/>
											</xs:choice>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute ref="xml:lang" use="optional"/>
											<xs:attributeGroup ref="assignment"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="assignment"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Property" type="PropertyType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
					<xs:attributeGroup ref="assignment"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="DescriptiveMetadata" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Multiple appearance for the child element Genre, new elements DateLineDate and Location were introduced in  version 1.1</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
						<xs:element name="Language" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An indication of the, or a, language used in a content item. The value of the FormalName attribute is a formal name for the Language. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="formalname"/>
								<xs:attributeGroup ref="assignment"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Genre" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An indication of the Genre of a NewsComponent. The value of the FormalName attribute is a formal name for the Genre. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="formalname"/>
								<xs:attributeGroup ref="assignment"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="SubjectCode" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>A container for the IPTC Subject Codes that indicate the subject of a NewsItem, as defined in the IPTC Information Interchange Model. It consists of one more Subject, SubjectMatter and SubjectDetail elements, optionally amplified by one or more SubjectQualifier elements.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence minOccurs="0" maxOccurs="unbounded">
									<xs:choice>
										<xs:element name="Subject">
											<xs:annotation>
												<xs:documentation>An indication of the Subject of a NewsItem. The value of the FormalName attribute is a formal name for the Subject. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attributeGroup ref="localid"/>
												<xs:attributeGroup ref="formalname"/>
												<xs:attributeGroup ref="assignment"/>
											</xs:complexType>
										</xs:element>
										<xs:element name="SubjectMatter">
											<xs:annotation>
												<xs:documentation>An indication of the SubjectMatter of a NewsItem. The value of the FormalName attribute is a formal name for the SubjectMatter. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attributeGroup ref="localid"/>
												<xs:attributeGroup ref="formalname"/>
												<xs:attributeGroup ref="assignment"/>
											</xs:complexType>
										</xs:element>
										<xs:element name="SubjectDetail">
											<xs:annotation>
												<xs:documentation>An indication of the SubjectDetail of a NewsItem. The value of the FormalName attribute is a formal name for the SubjectDetail. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attributeGroup ref="localid"/>
												<xs:attributeGroup ref="formalname"/>
												<xs:attributeGroup ref="assignment"/>
											</xs:complexType>
										</xs:element>
									</xs:choice>
									<xs:element name="SubjectQualifier" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>An indication of the SubjectQualifier of a NewsItem. The value of the FormalName attribute is a formal name for the SubjectQualifier. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attributeGroup ref="localid"/>
											<xs:attributeGroup ref="formalname"/>
											<xs:attributeGroup ref="assignment"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="assignment"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="OfInterestTo" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An indication of the target audience of a NewsItem. The value of the FormalName attribute is a formal name for the target audience. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Relevance" minOccurs="0">
										<xs:annotation>
											<xs:documentation>An indication of the relevance of a NewsItem to a given target audience. The value of the FormalName attribute is a formal name for the Relevance.  Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attributeGroup ref="localid"/>
											<xs:attributeGroup ref="formalname"/>
											<xs:attributeGroup ref="assignment"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="formalname"/>
								<xs:attributeGroup ref="assignment"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="DateLineDate" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A logical equivalent of the date of creation. ISO8601 Basic Format</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="NewsMLDate">
										<xs:attributeGroup ref="localid"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Location" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An indication of the location somehow relevant to the NewsItem. The type of the location (the nature of its relation to the NewsItem) is specified using the HowPresent attribute that is part of the assignment attribute group (e.g.  DateLine, Event, etc). Logical components of the location's definition (eg Country) are specified using the Property child elements with the FormalName attributes taken from the IPTC normative controlled vocabulary. In addition, if the location in question exists as a single Topic, the optional Topic attribute may be used as a direct pointer to that Topic. The pointer may take the form of an http URL or a NewsML URN, or a # character followed by the value of the Duid attribute of a Topic element in the current document</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Property" type="PropertyType" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="assignment"/>
								<xs:attribute name="Topic" type="xs:string"/>
								<xs:attribute ref="xml:lang" use="optional"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="TopicOccurrence" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An indication that a particular topic occurs within the content of a NewsComponent. The optional HowPresent attribute indicates the nature of that topic's occurrence. The value of the Topic attribute must consist of a # character followed by the value of the Duid attribute of a Topic in the current
										document.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="assignment"/>
								<xs:attribute name="Topic" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Property" type="PropertyType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
					<xs:attributeGroup ref="assignment"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Metadata" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>An container for a user-defined type of metadata.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
						<xs:element name="MetadataType">
							<xs:annotation>
								<xs:documentation>An indication of the type of metadata that is represented by the Property elements within this Metadata element. The value of the FormalName attribute is a formal name for the MetadataType. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="formalname"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Property" type="PropertyType" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
				</xs:complexType>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:choice maxOccurs="unbounded">
					<xs:element name="NewsItem" type="NewsItemType"/>
					<xs:element name="NewsItemRef">
						<xs:annotation>
							<xs:documentation>A pointer to a NewsItem that is deemed to replace the NewsItemRef element. The NewsItem attribute is a pointer to the relevant NewsItem. Its value can be an http URL, or a NewsML URN as described in the comment to PublicIdentifier, or a fragment identifier consisting of a # character followed by the Duid of a NewsItem in the current document.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
							</xs:sequence>
							<xs:attributeGroup ref="localid"/>
							<xs:attribute name="NewsItem" type="xs:string"/>
						</xs:complexType>
					</xs:element>
				</xs:choice>
				<xs:element name="NewsComponent" type="NewsComponentType" maxOccurs="unbounded"/>
				<xs:element name="ContentItem" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>A news object that carries or identifies content intended for presentation to humans.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
							<xs:element name="MediaType" minOccurs="0">
								<xs:annotation>
									<xs:documentation>An indication of the media type of a ContentItem. The value of the FormalName attribute is a formal name for the MediaType. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attributeGroup ref="localid"/>
									<xs:attributeGroup ref="formalname"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="Format" minOccurs="0">
								<xs:annotation>
									<xs:documentation>An indication of the format of a ContentItem. The value of the FormalName attribute is a formal name for the Format. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attributeGroup ref="localid"/>
									<xs:attributeGroup ref="formalname"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="MimeType" minOccurs="0">
								<xs:annotation>
									<xs:documentation>An indication of the MIME-type of a ContentItem. The value of the FormalName attribute is a formal name for the MimeType. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attributeGroup ref="localid"/>
									<xs:attributeGroup ref="formalname"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="Notation" minOccurs="0">
								<xs:annotation>
									<xs:documentation>An indication of the notation of a ContentItem. The value of the FormalName attribute is a formal name for the Notation. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attributeGroup ref="localid"/>
									<xs:attributeGroup ref="formalname"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="Characteristics" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Information about the physical characteristics of a ContentItem.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="SizeInBytes" minOccurs="0">
											<xs:annotation>
												<xs:documentation>The exact size in bytes of a ContentItem's inline or referenced data object.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:simpleContent>
													<xs:extension base="xs:positiveInteger">
														<xs:attributeGroup ref="localid"/>
													</xs:extension>
												</xs:simpleContent>
											</xs:complexType>
										</xs:element>
										<xs:element name="Property" type="PropertyType" minOccurs="0" maxOccurs="unbounded"/>
									</xs:sequence>
									<xs:attributeGroup ref="localid"/>
								</xs:complexType>
							</xs:element>
							<xs:group ref="data"/>
						</xs:sequence>
						<xs:attributeGroup ref="localid"/>
						<xs:attribute name="Href" type="xs:string"/>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attributeGroup ref="localid"/>
		<xs:attribute name="Essential" default="no">
			<xs:simpleType>
				<xs:restriction base="xs:NMTOKEN">
					<xs:enumeration value="yes"/>
					<xs:enumeration value="no"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="EquivalentsList" default="no">
			<xs:simpleType>
				<xs:restriction base="xs:NMTOKEN">
					<xs:enumeration value="yes"/>
					<xs:enumeration value="no"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute ref="xml:lang" use="optional"/>
	</xs:complexType>
	<xs:complexType name="NewsItemType">
		<xs:annotation>
			<xs:documentation>A managed set of information representing a point of view, at a given time, on some event or events. Its Identification and NewsManagement provide manageability. It may contain either a NewsComponent, or one or more Updates that modify aspects of a previous Revision of the same NewsItem, or a TopicSet. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
			<xs:element name="Identification">
				<xs:annotation>
					<xs:documentation>Identification information for the NewsItem.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NewsIdentifier">
							<xs:annotation>
								<xs:documentation>A globally unique identifier for a NewsItem.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ProviderId">
										<xs:annotation>
											<xs:documentation>An identifier for the news provider that produced the NewsItem. The provider's ID is specified in the element content. This should be an Internet domain name that is owned by the provider at the date identified by the DateId subelement of the NewsIdentifier. Because the domain name "iptc.org" was owned on 1 October 2000 by the International Press Telecommunications Council (IPTC) and no-one else, it is certain that IPTC is the provider in this case.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:string">
													<xs:attribute name="Vocabulary" type="xs:string"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
										<!--
												Example: 
												<NewsIdentifier>
												<ProviderId>iptc.org</ProviderId>
												<DateId>20001001</DateId>
												<NewsItemId>NewsML version 1.0</NewsItemId>
												<RevisionId>1</RevisionId
												</NewsIdentifier>
											-->
									</xs:element>
									<xs:element name="DateId" type="NewsMLDate">
										<xs:annotation>
											<xs:documentation>A date identifier of a NewsItem in short ISO 8601 Basic Format (YYYYMMDD), as described in the comment to the NewsMLDateTime simple type declaration above. The DateId is part of the formal identification of the NewsItem, and must remain the same through successive revisions of the same NewsItem.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="NewsItemId">
										<xs:annotation>
											<xs:documentation>An identifier for the NewsItem. The combination of a NewsItemId and a DateId must be unique among NewsItems that emanate from the same provider. Within these constraints, the NewsItemId can take any form the provider wishes. It may take the form of a name for the NewsItem that will be meaningful to humans, but this is not a requirement. The provider may optionally relate the values of a NewsItemId to a controlled vocabulary, which is invoked by the Vocabulary attribute. The value of the Vocabulary attribute may be an http URL, a NewsML URN, or the # character followed by the value of the Duid attribute of a TopicSet in the current document.  The Scheme attribute, if present, serves to distinguish which of possibly multiple naming schemes in the controlled vocabulary is the one that governs the NewsItemId. </xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:string">
													<xs:attribute name="Vocabulary" type="xs:string"/>
													<xs:attribute name="Scheme" type="xs:string"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="RevisionId" default="1">
										<xs:annotation>
											<xs:documentation>A positive integer indicating which Revision of a given NewsItem this is. Any positive integer may be used, but it must always be the case that of two instances of a NewsItem that have the same ProviderId, DateId and NewsItemId, the one whose RevisionId has the larger value must be the more recent revision. A RevisionId of 0 is not permitted. The PreviousRevision attribute must be present, and its value must be equal to the content of the RevisionId element of the NewsItem's previous revision, if there is one, and 0 if the NewsItem has no previous revision. If the NewsItem contains an Update element or elements, then the Update attribute must be set to U. If the NewsItem consists only of a replacement set of NewsManagement data, then the Update attribute must be set to A. If neither of these is the case, then the Update attribute must be set to N.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:positiveInteger">
													<xs:attribute name="PreviousRevision" type="xs:nonNegativeInteger" default="0"/>
													<xs:attribute name="Update" type="updateType" default="N"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="PublicIdentifier">
										<xs:annotation>
											<xs:documentation> 
													A public identifier (in the sense defined by the XML 1,0 Specification) for a NewsItem. This is the NewsML URN, and must be constructed as follows: 
													urn:newsml:{ProviderId}:{DateId}:{NewsItemId}:{RevisionId}{RevisionId@Update}
													where {x} means "the content of the x subelement of the NewsIdentifier" and {x@y} means "the value of the y attribute of the x subelement of the NewsIdentifier", with the exception that if the Update attribute of the RevisionId element has its default value of N, it is omitted from the URN.
													Note that the set of characters that can be directly included within a URN is limited.  The allowed characters are specified by the Internet Engineering Task Force (IETF) in its Request For Comments (RFC) number 2141.  This document is available at http://www.ietf.org/rfc/rfc2141.txt.  Any character that is not within the permitted URN character set must be converted to a sequence of legal characters as described in RFC 2141.
													Note that the existence of this URN enables the NewsItem to be referenced unambiguously by pointers from other XML elements or resources. Within such pointers, if the RevisionId, its preceding : character and its following Update qualifier are omitted, then the pointer designates the most recent revision at the time it is resolved. Version 1.1.2 Pattern corrected for Date component
												</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:minLength value="27"/>
												<xs:pattern value="urn:newsml:\D+:(19[0-9][0-9]|20[0-9][0-9]|21[0-9][0-9])(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1]):.+:\d+\D?"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="NameLabel" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A string used by human users as a name to help identify a NewsItem.  Its form is determined by the provider. It might be identical to the textual content of the SlugLine element, for example, but even if this is so, the system should not process the NameLabel as a slugline. Nothing can be assumed about the nature of the string within NameLabel beyond the fact that it can help to identify the NewsItem to humans.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attributeGroup ref="localid"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="DateLabel" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A string representation of a date or date and time, used by human users to help identify a NewsItem.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attributeGroup ref="localid"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Label" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>A human-readable label for a NewsItem.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="LabelType">
										<xs:annotation>
											<xs:documentation>A user-defined type of label. The value of the FormalName attribute is a formal name for the LabelType. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attributeGroup ref="localid"/>
											<xs:attributeGroup ref="formalname"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="LabelText">
										<xs:annotation>
											<xs:documentation>The text that constitutes a Label of a given LabelType. </xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:simpleContent>
												<xs:extension base="xs:string">
													<xs:attributeGroup ref="localid"/>
												</xs:extension>
											</xs:simpleContent>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="NewsManagement">
				<xs:annotation>
					<xs:documentation>Information relevant to the management of a NewsItem. Multiple StatusWillChange introduced in version 1.1</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NewsItemType">
							<xs:annotation>
								<xs:documentation>An indication of the type of a NewsItem. The value of the FormalName attribute is a formal name for the NewsItemType. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="formalname"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="FirstCreated">
							<xs:annotation>
								<xs:documentation>The date and, optionally, time at which a NewsItem was first created, expressed in ISO 8601 Basic Format, as described in the comment to the DateAndTime attribute within the assignment attribute group declaration above. </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="NewsMLDateTime">
										<xs:attributeGroup ref="localid"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="ThisRevisionCreated">
							<xs:annotation>
								<xs:documentation>The date and, optionally, time at which the current revision of a NewsItem was created, expressed in ISO 8601 Basic Format, as described in the comment to the NewsMLDateTime simple type declaration above.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="NewsMLDateTime">
										<xs:attributeGroup ref="localid"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Status" type="StatusType"/>
						<xs:element name="StatusWillChange" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Advance notification of a status change that will automatically occur at the specified date and time. For example, an item with a Status of "embargoed" might have a StatusWillChange element stating that the status will become "usable" at a specified time. This is equivalent to announcing in advance the time at which the embargo will end and the item will be released.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="FutureStatus">
										<xs:annotation>
											<xs:documentation>An indication of the status a NewsItem will have at a specified future date. The value of the FormalName attribute is a formal name for the FutureStatus. Its meaning is determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attributeGroup ref="localid"/>
											<xs:attributeGroup ref="formalname"/>
										</xs:complexType>
									</xs:element>
									<xs:element name="DateAndTime" type="DateAndTimeType"/>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Urgency" minOccurs="0">
							<xs:annotation>
								<xs:documentation>An indication of the urgency of a NewsItem. The value of the FormalName attribute is a formal name for the Urgency. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="formalname"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="RevisionHistory" minOccurs="0">
							<xs:annotation>
								<xs:documentation>A pointer to a file containing the revision history of the NewsItem.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute name="Href" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="DerivedFrom" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>A reference to an NewsItem from which this one is derived. The NewsItem attribute identifies the relevant NewsItem. Its value can be an http URL or a NewsML URN as described in the comment to PublicIdentifier. FormalName structure added in version 1.1</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute name="FormalName" type="xs:string"/>
								<xs:attribute name="Vocabulary" type="xs:string"/>
								<xs:attribute name="Scheme" type="xs:string"/>
								<xs:attribute name="NewsItem" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="AssociatedWith" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>A reference to a NewsItem with which this one is associated (for example, a series of articles, or a collection of photos, of which it is a part).  The NewsItem attribute identifies the relevant NewsItem. Its value can be an http URL or a NewsML URN as described in the comment to PublicIdentifier. The Comment can be used to indicate the nature of the association. FormalName attribute structure added in version 1.1. </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
								<xs:attribute name="FormalName" type="xs:string"/>
								<xs:attribute name="Vocabulary" type="xs:string"/>
								<xs:attribute name="Scheme" type="xs:string"/>
								<xs:attribute name="NewsItem" type="xs:string"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Instruction" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An instruction from a news provider to the recipient of a NewsItem. A special case of Instruction is an indication of the effect the current revision of a NewsItem has on the status of any previous revisions of the NewsItem that may still be on the recipient's system. In this case, it will contain one or more RevisionStatus elements. Otherwise, the value of the FormalName attribute is a formal name for the Instruction, and its meaning is determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="RevisionStatus" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Indicates the status that previous revisions now has as a result of the release of the current revision. The optional Revision attribute is an integer, equal to the RevisionId of the revision in question. If it is not present, then the status applies to ALL previous revisions, without exception.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="Status" type="StatusType"/>
											</xs:sequence>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute name="Revision" type="xs:positiveInteger"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="formalname"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Property" type="PropertyType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
				</xs:complexType>
			</xs:element>
			<xs:choice minOccurs="0">
				<xs:element name="NewsComponent" type="NewsComponentType"/>
				<xs:element name="Update" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>A modification to an existing NewsItem. This can be an insertion, replacement or deletion. Note that the Update element cannot be used to modify the NewsManagement or Identification element, or any of their descendants. Modifications to these parts of the NewsItem can be made by issuing the NewsItem under the current revision number, with only the Identification and NewsManagement elements present.  These will replace the previous Identification and NewsManagement elements in their totality.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:choice minOccurs="0" maxOccurs="unbounded">
							<xs:element name="InsertBefore">
								<xs:annotation>
									<xs:documentation>An instruction to insert content before a designated element within a NewsItem. The content to be inserted is the content of the InsertBefore element. The NewsItem into which it is to be inserted is the previous revision of the current one, and the element before which it is to be inserted is the one whose Duid value is equal to the value of the InsertBefore element's DuidRef attribute.
										</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:complexContent>
										<xs:restriction base="xs:anyType">
											<xs:sequence>
												<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
											</xs:sequence>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute name="DuidRef" type="xs:IDREF" use="required"/>
										</xs:restriction>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="InsertAfter">
								<xs:annotation>
									<xs:documentation>An instruction to insert content after a designated element within a NewsItem. The content to be inserted is the content of the InsertAfter element. The NewsItem into which it is to be inserted is the previous revision of the current one, and the element after which it is to be inserted is the one whose Duid value is equal to the value of the InsertAfter element's DuidRef attribute. </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:complexContent>
										<xs:restriction base="xs:anyType">
											<xs:sequence>
												<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
											</xs:sequence>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute name="DuidRef" type="xs:IDREF" use="required"/>
										</xs:restriction>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="Replace">
								<xs:annotation>
									<xs:documentation>An instruction to replace a designated element within a NewsItem. The element that is to replace the designated element is the content of the Replace element. The NewsItem within which the replacement takes place is the previous revision of the current one, and the element to be replaced is the one whose Duid value is equal to the value of the Replace element's
											DuidRefattribute.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:complexContent>
										<xs:restriction base="xs:anyType">
											<xs:sequence>
												<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
											</xs:sequence>
											<xs:attributeGroup ref="localid"/>
											<xs:attribute name="DuidRef" type="xs:IDREF" use="required"/>
										</xs:restriction>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
							<xs:element name="Delete">
								<xs:annotation>
									<xs:documentation>An instruction to delete an element within a NewsItem. The NewsItem is the previous revision of the current one, and the element to be deleted is the one whose Duid value is equal to the value of the Delete element's DuidRef attribute.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attributeGroup ref="localid"/>
									<xs:attribute name="DuidRef" type="xs:IDREF" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:choice>
						<xs:attributeGroup ref="localid"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="TopicSet" type="TopicSetType"/>
			</xs:choice>
		</xs:sequence>
		<xs:attributeGroup ref="localid"/>
		<xs:attribute ref="xml:lang" use="optional"/>
	</xs:complexType>
	<xs:complexType name="OriginType" mixed="true">
		<xs:annotation>
			<xs:documentation>A wrapper for all or part of the text of a piece of text, which provides a pointer to an item of data corresponding formally to what is being described here in natural language. The Href attribute identifies the relevant data, and may be an http URL or a NewsML URN as described in the comment to PublicIdentifier, optionally including a fragment identifier. Alternatively, it can be a simple fragment identifier consisting of a # character followed by the value of the Duid of an element in the current document.</xs:documentation>
		</xs:annotation>
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Origin" type="OriginType"/>
		</xs:choice>
		<xs:attributeGroup ref="localid"/>
		<xs:attributeGroup ref="assignment"/>
		<xs:attribute name="Href" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="PropertyType">
		<xs:annotation>
			<xs:documentation>A property of a NewsItem, NewsComponent, ContentItem, Topic, Location or Party. The property has a name and either  a simple Value or a complex value consisting of a set of further properties.  The property has a name and either  a simple Value or a complex value consisting of a set of further properties. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Property" type="PropertyType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attributeGroup ref="localid"/>
		<xs:attributeGroup ref="formalname"/>
		<xs:attributeGroup ref="assignment"/>
		<xs:attribute name="Value" type="xs:string">
			<xs:annotation>
				<xs:documentation>
						A string representation of the value of a Property.
					</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ValueRef" type="xs:string">
			<xs:annotation>
				<xs:documentation>
						A pointer to the value of the Property. This might be a Topic in a TopicSet, or any other piece of data. If both Value and ValueRef are provided, then ValueRef identifies the actual value of the property, with Value simply providing a string representation or mnemonic for it. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AllowedValues" type="xs:string">
			<xs:annotation>
				<xs:documentation>
						The AllowedValues attribute, if present, is a pointer to a controlled vocabulary that delimits the set of allowed values for the property. This may be an http URL, or a NewsML URN, or a fragment identifier consisting of a # charactger followed by the Duid of an element in the current document. The pointer must reference either a Resource element that designates an external controlled vocabulary, or a TopicSet element, that is itself the controlled vocabulary. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AllowedScheme" type="xs:string">
			<xs:annotation>
				<xs:documentation>
						The AllowedScheme attribute, if present, distinguishes the Scheme in a controlled vocabulary that delimits the set of allowed values for the property. For a match to be obtained within the controlled vocabulary both the AllowedScheme  must match the Scheme in the vocabulary and the Value must match the FormalName in the vocabulary.  The use of the AllowedScheme attribute serves to indicate that the Value data is drawn from a controlled vocabulary rather that being an uncontrolled entry. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="StatusType">
		<xs:annotation>
			<xs:documentation>An indication of the Status of a NewsItem. The value of the FormalName attribute is a formal name for the Status. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="localid"/>
		<xs:attributeGroup ref="formalname"/>
	</xs:complexType>
	<xs:complexType name="TopicSetType">
		<xs:annotation>
			<xs:documentation>A container for Topics. The value of the FormalName attribute is a formal name for the TopicSet. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
			<xs:element name="TopicSetRef" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A pointer to a TopicSet that is to be merged with the current one.  The TopicSet attribute is a pointer to the relevant TopicSet. Its value can be an http URL, or a NewsML URN as described in the comment to PublicIdentifier, or a fragment identifier consisting of a # character followed by the Duid of a TopicSet in the current document. The presence of a TopicSetRef child in a TopicSet has the effect that all the Topics in the referenced TopicSet are included by reference within the current TopicSet. When this merging results in there exising two FormalName grandchildren of the same TopicSet that have the same content and the same Scheme attribute value, then the Topics whose children are in fact the same topic, and are deemed to be merged. The merging of Topics need not be performed physically by the system, but the meaning of the data is exactly the same as if the merging were actually performed. Merging two Topcis consists of creating a single Topic that contains all the children of both, and eliminating duplicates.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
					<xs:attribute name="TopicSet" type="xs:string"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="Topic" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>This element provides information about a thing (Topic) named by a formal name or occurring in a NewsComponent. A Topic must have one or more TopicType subelements, which state what type of Topic it is. The optional Details attribute provides a pointer, in the form of a URL or URN, to additional information about the Topic.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Comment" type="CommentType" minOccurs="0" maxOccurs="unbounded"/>
						<xs:element name="Catalog" type="CatalogType" minOccurs="0"/>
						<xs:element name="TopicType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>An indication of the type of a Topic. The value of the FormalName attribute is a formal name for the TopicType. Its meaning and permitted values are determined by a controlled vocabulary as described in the comment to the formalname attribute group declaration above.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attributeGroup ref="localid"/>
								<xs:attributeGroup ref="formalname"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="FormalName" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>A string of characters whose meaning is determined by a naming scheme within a controlled vocabulary. The controlled vocabulary may (but is not required to) take the form of a NewsML TopicSet. The optional Scheme attribute determines which naming scheme applies, when several exist within the same controlled vocabulary.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attributeGroup ref="localid"/>
										<xs:attribute name="Scheme" type="xs:string"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Description" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>A description that identifies a Topic, thereby indicating the meaning of a formal name associated with that Topic. The xml:lang attribute indicates what language the description is in. The optional Variant attribute allows multiple descriptions to be given in the same language, and meaningfully distinguished from one another.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:string">
										<xs:attributeGroup ref="localid"/>
										<xs:attribute ref="xml:lang" use="optional"/>
										<xs:attribute name="Variant" type="xs:string"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="Property" type="PropertyType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attributeGroup ref="localid"/>
					<xs:attribute name="Details" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attributeGroup ref="localid"/>
		<xs:attributeGroup ref="formalname"/>
	</xs:complexType>
</xs:schema>
