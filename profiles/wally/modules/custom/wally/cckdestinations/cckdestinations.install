<?php

/**
 * Implementation of hook_install().
 */
function cckdestinations_install(){
  content_notify('install', 'destinationsfield');
  
  $ret = array();
  $spec = array(
    'type' => 'int',
    'description' => 'Tells if a term has been elected as destination and gives the related tid.',
    'not null' => TRUE, 
    'default' => 0,
  );
  db_add_field($ret, 'term_data', 'topic_destination', $spec);
  
  if (module_exists('taxonomy_vocab_relate')) {
    $weight = db_result(db_query("SELECT weight FROM {system} WHERE name = 'taxonomy_vocab_relate'"));
    db_query("UPDATE {system} SET weight = %d WHERE name = 'cckdestinations'", $weight + 1);
  } else {
    db_query("UPDATE {system} SET weight = 1 WHERE name = 'cckdestinations'");
  }
  
  if (!db_table_exists('cckdestinations_multiple_destinations')) {
    drupal_install_schema('cckdestinations');
  }
}

/**
 * Implementation of hook_uninstall().
 */
function cckdestinations_uninstall(){
  module_load_include('inc', 'wallytoolbox', 'includes/wallytoolbox.helpers');
  content_notify('uninstall', 'destinationsfield');
  wallytoolbox_variable_del_like('cckdestinations_');
  
  $ret = array();
  db_drop_field($ret, 'term_data', 'topic_destination');
}

/**
 * Implementation of hook_enable().
 */
function cckdestinations_enable(){
  content_notify('enable', 'destinationsfield');
}

/**
 * Implementation of hook_desable().
 */
function cckdestinations_disable(){
  content_notify('disable', 'destinationsfield');
}

/**
 * Implementation of hook_schema
 */
function cckdestinations_schema() {
  $schema = array();

  $schema['cckdestinations_multiple_destinations'] = array(
    'description' => 'Contains the mapping between virtual destinations and real destinations',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'description' => 'A database primary key to ensure uniqueness',
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'virtual' => array(
        'type' => 'varchar',
        'length' => 255, 
        'not null' => TRUE,
        'description' => 'The virtual destination name',
      ),
      'reals' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized informations about mapped real destinations',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implementation of hook_update_N().
 * Add topic_destination field to term_data table
 */
function cckdestinations_update_6001() {
  $ret = array();
  $spec = array(
    'type' => 'int',
    'description' => 'Tells if a term has been elected as destination and gives the related tid.',
    'not null' => TRUE, 
    'default' => 0,
  );
  db_add_field($ret, 'term_data', 'topic_destination', $spec);
  return $ret;
}

/**
 * Implementation of hook_update_N().
 * Change module's weight to follow taxonomy_vocab_relate in hook_form_alter
 */
function cckdestinations_update_6002() {
  $ret = array();
  if (module_exists('taxonomy_vocab_relate')) {
    $weight = db_result(db_query("SELECT weight FROM {system} WHERE name = 'taxonomy_vocab_relate'"));
    $ret[] = update_sql("UPDATE {system} SET weight = %d WHERE name = 'cckdestinations'", $weight + 1);
  } else {
    $ret[] = update_sql("UPDATE {system} SET weight = 1 WHERE name = 'cckdestinations'");
  }
  return $ret;
}

/**
 * Implementation of hook_update_N().
 * Refactoring of variables
 */
function cckdestinations_update_6003() {
  module_load_include('inc', 'wallytoolbox', 'includes/wallytoolbox.helpers');
  $cckdest_variables = wallytoolbox_variable_get_like('cckdestinations_destination_', TRUE);
  $hierarchies = wallyctools_get_hierarchies();
  foreach ($hierarchies as $tid => $hierarchy) {
    foreach ($hierarchy['redacblocks'] as $redacblock) {
      $temp_dest = array(
        'sort_method' => isset($cckdest_variables[$tid.'_'.$redacblock['name'].'_sort_method']) ? $cckdest_variables[$tid.'_'.$redacblock['name'].'_sort_method'] : 'absolute',
        'behavior' => isset($cckdest_variables[$tid.'_'.$redacblock['name'].'_behavior']) ? $cckdest_variables[$tid.'_'.$redacblock['name'].'_behavior'] : 'bottom',
        'reserved' => isset($cckdest_variables[$tid.'_'.$redacblock['name'].'_reserved']) ? $cckdest_variables[$tid.'_'.$redacblock['name'].'_reserved'] : 5,
        'delta_t' => isset($cckdest_variables[$tid.'_'.$redacblock['name'].'_delta_t']) ? $cckdest_variables[$tid.'_'.$redacblock['name'].'_delta_t'] : 1,
      );
      unset($cckdest_variables[$tid.'_'.$redacblock['name'].'_sort_method']);
      unset($cckdest_variables[$tid.'_'.$redacblock['name'].'_behavior']);
      unset($cckdest_variables[$tid.'_'.$redacblock['name'].'_reserved']);
      unset($cckdest_variables[$tid.'_'.$redacblock['name'].'_delta_t']);
      wallytoolbox_variable_del_like('cckdestinations_destination_'.$tid.'_'.$redacblock['name'].'_');
      variable_set('cckdestinations_destination_'.$tid.'_'.$redacblock['name'], $temp_dest);
    }
  }
  
  if (!empty($cckdest_variables)) {
    foreach ($cckdest_variables as $name => $value) {
      variable_del('cckdestinations_destination_'.$name);
    }
  }
  
  return array();
}

/**
 * Implementation of hook_update_N
 * Install table cckdestinations_multiple_destinations
 */
function cckdestinations_update_6004() {
  $ret = array();
  $schemas = cckdestinations_schema();
  db_create_table($ret, 'cckdestinations_multiple_destinations', $schemas['cckdestinations_multiple_destinations']);
  return $ret;
}
