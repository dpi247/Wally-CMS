<?php

//@todo: DDU initialiser correctement les valeurs de settings des fields lors de l'install du module 
//@todo: DDU le poids system doit être changé lors du hook_install

include_once 'includes/Prenode.inc';
/**
 * @file
 * wallyedit module
 *
 * This module provide coherent edition interface for package type
 *
 */
 
/*
 * Implementation du hook menu
 */ 
function wallyedit_menu(){
  return array(
  'admin/content/wallyedit'=>array(
      'page callback'=>'wallyedit_page_admin',
      'access arguments' => 'administer nodes',
  	  'file'=>'includes/page_admin.inc',
  	  //'file path'=>'includes/',
  	  'title'=> 'WallyEdit Admin',
  	  'Description'=> 'Manage Node Edition',
    ),
    'node/%prenode/edit2/%ctools_js'=>array(
      'page callback'=>'wallyedit_page_node_edition',
      'page arguments'=>array(1,3),
      'access callback' => 'node_access',
      'access arguments' => array('update', 1),
  	  'file'=>'includes/page_node_edition.inc',
  	  //'file path'=>'includes/',
    ),
    'node/%prenode/wydit_edit/%ctools_js'=>array(
      'page callback'=>'wallyedit_callback_edit',
      'page arguments'=>array(1,3),
      'access callback' => 'node_access',
      'access arguments' => array('update', 1),
  	  'file'=>'includes/callback_edit.inc',
  	  //'file path'=>'includes/',
    ),
    'node/%prenode/wydit_typeselector/%ctools_js'=>array(
      'page callback'=>'wallyedit_callback_typeselector',
      'page arguments'=>array(1,3),
      'access callback' => 'node_access',
      'access arguments' => array('update', 1),
  	  'file'=>'includes/callback_typeselector.inc',
  	  //'file path'=>'includes/',
    ),
    'node/%prenode/wydit_add_new/%ctools_js'=>array(
      'page callback'=>'wallyedit_callback_add_new',
      'page arguments'=>array(1,3),
      'access callback' => 'node_access',
      'access arguments' => array('update', 1),
  	  'file'=>'includes/callback_add_new.inc',
  	  //'file path'=>'includes/',
    ),
    'wallyedit/test'=>array(
      'type'=> MENU_LOCAL_TASK,
      'page callback'=>'wallyedit_test',
      'page arguments'=>array(1),
      'access callback' => 'node_access',
      'access arguments' => array('update', 1),
  	  'file'=>'includes/test.inc',
  	  //'file path'=>'includes/',
    ),
  );
}
function wallyedit_form_alter(&$form, &$form_state, $form_id){
  if($form_id=='content_display_overview_form'){
    
    module_load_include("inc",'content','includes/content.node_form');
    
    $type_name=$form['#type_name'];
   
    $type=content_types($type_name);
    
    $fields = $type['fields'];
    
    $groups = array();
    if (module_exists('fieldgroup')) {
      $groups = fieldgroup_groups($type['type']);
    }
       foreach($form["#fields"] as $field){
       $form[$field]["wallyedit"]=array(
         '#type'=>'select',
         '#options'=>array(0=>t("Exclude"),1=>t("Normal")),
       );
       if($fields[$field]['type']=='nodereference'){
       $form[$field]["wallyedit"]["#options"]=array_merge($form[$field]["wallyedit"]["#options"],array(2=>t('inline'),3=>t('Select box')));
       }
       $form[$field]["wallyedit"]["#default_value"]=$fields[$field]['display_settings']['wallyedit'];
     }
     foreach($form["#groups"] as $field){}
  }  
}

function wallyedit_theme(){
  $path = drupal_get_path('module', 'wallyedit');
  $base = array(
    'file' => 'theme.inc',
    'path' => "$path/theme",
  );
  
  return array(
    'wallyedit_admin'=>$base+array(
     // 'template' => 'my-template-day-node',
      'arguments' => array('rows'=>array()),
      ),
    'wallyedit_page_node_edition'=>$base+array(
     // 'template' => 'my-template-day-node',
      'arguments' => array('form'=>array(),'prenode' => NULL),
      ),
    'wallyedit_form_pagenodeedition_form'=>$base+array(
     // 'template' => 'my-template-day-node',
      'arguments' => array('form'=>array(),'prenode' => NULL),
      ),
    'content_display_overview_form'=>array(
      'template' => 'wallyedit-admin-display-overview-form',
      'arguments' => array('form'=>array()),
      'path' => drupal_get_path('module', 'wallyedit') . '/theme',
      'original hook' => 'content_display_overview_form',
      ),
      'wydit_selector_theme'=>$base+array(
     // 'template' => 'my-template-day-node',
      'arguments' => array('form'=>array()),
      ),
  );
}



function wallyedit_form_pagenodeedition_form(&$form_state){

  $form=array('#tree'=>true);
  $form['#action']=$form_state["action"];
  $form['#no_cache']=true;
  
  $type_name=$form_state['type'];
  $type=wydit_get_infos_type($type_name);
  $fields = $type['fields'];
  $a=array("#tree"=>true);      
  $a=drupal_retrieve_form($type_name.'_node_form',$a,$form_state[$type_name]['#node']);
  $a['#tree']=true;
  drupal_prepare_form($type_name.'_node_form',$a,$form_state);

  unset($a["#type"]);
  unset($a["form_id"]);
  unset($a["#parents"]);
  $form[$type_name]=array("#type"=>'fieldset');
    foreach($a as $element_name=>$value){
      $form[$type_name][$element_name]=$value;
  }
  wydit_prepare_primary_package_form($form[$type_name],$form_state,$type['type'],$fields,array(0=>$type['type']));
  
  wydit_remove_form_infos($form[$type_name]);
  
  $form['#tree']=true;
  
  
  $form["save_global"]=array(
    '#type'=>'submit',
    '#name'=>'save_global',
    "#value"=> 'Save',
  	'#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
  
  
  ); 
    $form['#tree']=true;
    
    $form["reset_global"]=array(
    '#type'=>'submit',
    '#name'=>'reset_global',
    "#value"=> 'Reset',
   // 	'#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
    
  
  );
  
    $form["publish_global"]=array(
    '#type'=>'submit',
    '#name'=>'publish_global',
    "#value"=> 'Publish',
    
  
  ); 
  /* 
  $form["delete_global"]=array(
    '#type'=>'submit',
    '#name'=>'delete_global',
    "#value"=> 'Delete',
    '#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
  
  );
  */
  return $form;
}


function wydit_prepare_primary_package_form(& $form,&$form_state,$type,$fields,$parents){
  foreach(element_children($form) as $element){
    $parents_new=$parents;
    $parents_new[]=$element;
    if($form[$element]['#type']=='value'){
    //$form[$element]['#parents']=$parents;
      continue;
    }
    if($form[$element]['#type']=='fieldset'){
      wydit_prepare_primary_package_form(&$form[$element],$form_state,$type,$fields,$parents);
      wydit_changetypefromfieldset($form[$element],$fields);
    }
    if(isset($fields[$element]) and $fields[$element]['display_settings']["wallyedit"]==0 ){
      //@todo: DDU what happen if the element is required ?
      //if($form[$element]['#required']==false){
      unset($form[$element]);
      //}
      //else{dsm($form[$element]);}
    }
    if(isset($fields[$element]) and $fields[$element]['display_settings']["wallyedit"]==1 ){
      
      $form[$element]['#parents']=$parents_new;
      //@todo: DDU what happen if the element is required ?
      //if($form[$element]['#required']==false){
            //}
      //else{dsm($form[$element]);}
    }
    
  if(isset($fields[$element]) and $fields[$element]['display_settings']["wallyedit"]==2 ){
    $parents_new[]=0;
      wydit_prepare_inline_form_element($form[$element],$form_state[$type][$element][0],$element,$fields,$parents_new  );  
      //$form[$element]['#parents']=array($element);
    }
  if(isset($fields[$element]) and $fields[$element]['display_settings']["wallyedit"]==3 ){
      wydit_prepare_selectbox_form_element($form[$element],$form_state[$type][$element],$element,$fields,$parents_new  );  
      //$form[$element]['#parents']=array($element);
    }
  }
     
  unset($form['menu']);
  unset($form['buttons']);
  unset($form['author']);
  unset($form['revision_information']);
  unset($form['options']);
  unset($form['comment_settings']);
  unset($form['#theme']);
  
  
  /*
    unset($form['#id']);
    unset($form['#attributes']);
    unset($form['#parameters']);
    unset($form['#node']);
    unset($form['#after_build']);
    
    unset($form['#pre_render']);
    unset($form['#attributes']);
    unset($form['#validate']);
    
  */
  
  unset($form['#submit']);
  unset($form['#disabled']);
  
  

 
}




function wallyedit_form_pagenodeedition_form_validate($form,&$form_state){

}


function wallyedit_form_pagenodeedition_form_submit($form,&$form_state){
 ctools_include('form');
 ctools_include('modal');
 ctools_include('ajax');
 ctools_add_js('ajax-responder');
 ctools_modal_add_js();
 ctools_include('object-cache');
 $commands=array();
 
 
  if($form_state["clicked_button"]['#name']=='reset_global'){
    drupal_set_message('reset');
    ctools_object_cache_clear('prenode', $form_state[$form_state['type']]['#node']->nid);
    

    drupal_goto("node/".$form_state[$form_state['type']]['#node']->nid);
    
  }
  
  
  
  
  //*********
  //Prepare form_state for input element
  //*********
  
  $b = node_submit($form_state['values']);
  
  $a=array();
  $a[$form_state['type']]['#node']=(object)((array)node_submit($form_state['values'][$form_state['type']])+(array)$form_state[$form_state['type']]['#node']);
  $a['type']=$form_state['type'];
  $a['cache name']=$form_state['cache name'];
  
  
  $type_name=$form_state['type'];
  $type=wydit_get_infos_type($type_name);
  $fields = $type['fields'];
  
  foreach($fields as $field){
         
    if($field['display_settings']["wallyedit"]>1){
      if(isset($form_state[$form_state['type']][$field['field_name']])){
      
        foreach($form_state[$form_state['type']][$field['field_name']] as $key=>$value){
          $a[$form_state['type']][$field['field_name']][$key]['#node']=(object)((array)node_submit($form_state['values'][$form_state['type']][$field['field_name']][$key])+(array)$form_state[$form_state['type']][$field['field_name']][$key]['#node']);
          $subtype=$a[$form_state['type']][$field['field_name']][$key]['#node']->type;
          $a[$form_state['type']][$field['field_name']][$key]['type']=$subtype;
        }
    }
  }
}
  
  //@todo: DDU use same technique as for ubercart order (for unique "nid");
  ctools_object_cache_set('prenode', $a[$form_state['type']]['#node']->nid, $a);
  
  if($form_state["clicked_button"]['#name']=='publish_global'){
    drupal_set_message('Node has been published');
    wydit_publish_prenode($a);

    
    ctools_object_cache_clear('prenode', $form_state[$form_state['type']]['#node']->nid);
    drupal_goto("node/".$form_state[$form_state['type']]['#node']->nid);
    
  }
  
  
  //*********
  //DISPATCH
  //*********
 
  
  $action =split('__',$form_state['clicked_button']['#name']);
  $action=$action[0];
  switch($action){
    
    case 'edit':
      $new_form_state=array();
      $new_form_state['parents']=$form_state['clicked_button']["#parents"];
      $new_form_state['action']='/node/'.arg(1).'/wydit_edit/ajax';
      $new_form_state[$form_state['type']]=$form_state[$form_state['type']];
      $edit_form = ctools_build_form('wallyedit_form_editnode_form', $new_form_state);
      $commands[] = ctools_ajax_command_html('#wallyedit_container',$edit_form);  
      //$commands[] = ctools_ajax_command_html('#wallyedit_container','ee');  
      
    break;
    case 'add_new':
      
      //@todo: remove hard coding of parents
      $field_infos=$fields[$form_state['clicked_button']["#parents"][1]];
      if(count($field_infos['referenceable_types'])==1){
      
      }
      else{
        //$form_state_type_selector=wydit_clean_form_state($form_state);
        $form_state_type_selector['fields_infos']=$field_infos;
        $new_form_state['action']='/node/'.arg(1).'/wydit_typeselector/ajax';
        
        //$form_state_type_selector['input']=array();
        $form_state_type_selector['parents']=$form_state['clicked_button']["#parents"];
        $form_type_selector = ctools_build_form('wallyedit_form_nodetypeselector_form', $form_state_type_selector);
        $commands[] = ctools_ajax_command_html('#wallyedit_container',$form_type_selector);  
      }
    break;
    case 'add_existing':
    break;
    case 'save_global':
    break;
    case 'remove':
      //dsm($form_state);
      $form_state=wydit_remove_element($form_state,$form_state['clicked_button']['#parents']);
      //dsm($form_state);
      wydit_clean_and_save_form_state($form_state);
      
      $prenode=new Prenode($form_state[$form_state['type']]['#node']->nid);
      $new_form_state=$prenode->getFormState();
      unset($_POST);
      $new_form_state['want form']=TRUE  ;
      
      
      $new_form = ctools_build_form('wallyedit_form_pagenodeedition_form', wydit_clean_form_state($new_form_state));
      $commands[] = ctools_ajax_command_html('#wallyedit_container',$new_form); 
      
      //ctools_ajax_render($commands); 
      
    break;
  }
 
  // drupal_goto('node');
   
  $commands[] = ctools_ajax_command_html('#wallyedit_messages', theme_status_messages());
  //$commands[] = ctools_ajax_command_html('#wallyedit_container', theme_status_messages());
  ctools_ajax_render($commands); 
}

function wallyedit_form_addnode_form(&$form_state){
 
  $node->type=$form_state['type'];
  
  $type_name=$node->type;
  $type=wydit_get_infos_type($type_name);
  $fields = $type['fields'];
  
  $form=array('#tree'=>true);
  $form['#action']='/node/'.arg(1).'/wydit_add_new/ajax';
  
  //@todo: target should be parents ?
  $target=array_merge($form_state['parents'],array("#node"));
  $form['target']=array('#type'=>'value','#value'=>$target);
  $form['parents']=array('#type'=>'value','#value'=>$form_state['parents']);
  $form['type']=array('#type'=>'value','#value'=>$node->type);
  
  $a=array("#tree"=>true);      
  $a=drupal_retrieve_form($type_name.'_node_form',$a,$node);
  $a['#tree']=true;
  
  drupal_prepare_form($type_name.'_node_form',$a,$form_state);

  unset($a["#type"]);
  unset($a["form_id"]);
  unset($a["#parents"]);
  $form[$type_name]=array("#type"=>'fieldset');

  foreach($a as $element_name=>$value){
    $form[$type_name][$element_name]=$value;
  }
  
  wydit_prepare_primary_package_form($form[$type_name],$form_state,$type['type'],$fields,array(0=>$type['type']));
  
  wydit_remove_form_infos($form[$type_name]);
    
  $form['#tree']=true;
  
  $form["save_global"]=array(
    '#type'=>'submit',
    '#name'=>'save_global',
    "#value"=> 'Save AJAX',
  	'#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
  ); 
  $form['#tree']=true;
  $form["_save_global"]=array(
    '#type'=>'submit',
    '#name'=>'save_global',
    "#value"=> 'Save',
  ); 
  
  return $form;
  
}
function wallyedit_form_addnode_form_submit($form,&$form_state){
  ctools_include('form');
  ctools_include('modal');
  ctools_include('ajax');
  ctools_add_js('ajax-responder');
  ctools_modal_add_js();
  ctools_include('object-cache');
  
  $node = $form_state['values'][$form_state['values']['type']];
  
  $element['#node']=$node;
  $element['type']=$node->type;
  
  wydit_add_to_form_state($form_state,$element,$form_state['values']["parents"],TRUE);
  wydit_clean_and_save_form_state($form_state);

  $form = ctools_build_form('wallyedit_form_pagenodeedition_form', $form_state);
  $commands[] = ctools_ajax_command_html('#wallyedit_container',$form);  
  $commands[] = ctools_ajax_command_html('#wallyedit_messages', theme_status_messages());
  
  
  ctools_ajax_render($commands); 
}

function wallyedit_form_editnode_form(&$form_state){
  $node=wydit_get_current_node_from_parents($form_state);
  
  $type_name=$node->type;
  $type=wydit_get_infos_type($type_name);
  $fields = $type['fields'];
  
  $form=array('#tree'=>true);
  $form['#action']='/node/'.arg(1).'/wydit_edit/ajax';
  
  //@todo: target should be parents ?
  $target=array_merge($form_state['parents'],array("#node"));
  $form['target']=array('#type'=>'value','#value'=>$target);
  $form['parents']=array('#type'=>'value','#value'=>$form_state['parents']);
  $form['type']=array('#type'=>'value','#value'=>$node->type);
  
  $a=array("#tree"=>true);      
  $a=drupal_retrieve_form($type_name.'_node_form',$a,$node);
  $a['#tree']=true;
  
  drupal_prepare_form($type_name.'_node_form',$a,$form_state);

  unset($a["#type"]);
  unset($a["form_id"]);
  unset($a["#parents"]);
  $form[$type_name]=array("#type"=>'fieldset');

  foreach($a as $element_name=>$value){
    $form[$type_name][$element_name]=$value;
  }
  
  wydit_prepare_primary_package_form($form[$type_name],$form_state,$type['type'],$fields,array(0=>$type['type']));
  
  wydit_remove_form_infos($form[$type_name]);
    
  $form['#tree']=true;
  
  $form["save_global"]=array(
    '#type'=>'submit',
    '#name'=>'save_global',
    "#value"=> 'Save AJAX',
  	'#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
  ); 
  $form['#tree']=true;
  $form["_save_global"]=array(
    '#type'=>'submit',
    '#name'=>'save_global',
    "#value"=> 'Save',
  ); 
  
  return $form;

  
}

function wallyedit_form_editnode_form_submit(&$form,&$form_state){
  ctools_include('form');
  ctools_include('modal');
  ctools_include('ajax');
  ctools_add_js('ajax-responder');
  ctools_modal_add_js();
  ctools_include('object-cache');

  
  $node=& wydit_get_current_node_from_parents($form_state,$form_state['values']['parents']);
  
  
  $b = $form_state['values'][$form_state['values']['type']];
  
  
  $a=array();
  $node=(object)((array)$b+(array) $node);
  
  
  // dsm($form_state,form_state);
  
  wydit_add_to_form_state($form_state,$node,$form_state['values']['target']);
  wydit_clean_and_save_form_state($form_state);
  

  $form = ctools_build_form('wallyedit_form_pagenodeedition_form', $form_state);
  $commands[] = ctools_ajax_command_html('#wallyedit_container',$form);  
  $commands[] = ctools_ajax_command_html('#wallyedit_messages', theme_status_messages());
  
  ctools_ajax_render($commands); 
  
}


function wallyedit_form_nodetypeselector_form(&$form_state){
  ctools_include('form');
  ctools_include('modal');
  ctools_include('ajax');
  ctools_add_js('ajax-responder');
  ctools_modal_add_js();
  ctools_include('object-cache');
  
  
  $form=array('#tree'=>true);
  $form['#action']='/node/'.arg(1).'/wydit_typeselector/ajax';
  
  $field_infos=$form_state['fields_infos'];
  $parents=$form_state['parents'];
  $form['parents33']=array('#type'=>'value','#value'=>$form_state['parents']);
  
  $content_types=_content_type_info();
 
  foreach($field_infos['referenceable_types'] as $type_name=>$value){
    if($value)
     $options[$type_name]=$content_types["content types"][$type_name]['name'];
  }
   
  $form['parents']=array(
     "#type"=>'hidden',
     "#value"=>serialize($parents),
  );
   
  $form['type'] = array(
  '#type' => 'radios',
  '#title' => t('Select the type of node to add'),
  '#options' => $options,
  "#required"=>true,
  );
  
  
  $form['back'] = array(
  '#type' => 'submit',
  "#name"=>'back',
  '#value'=>"back",
  '#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
  
  );
  $form['next'] = array(
  '#type' => 'submit',
  "#name"=>'next',
  '#value'=>"next",
  '#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
  
  );
  return $form;
}
function wallyedit_form_nodetypeselector_form_submit($form, &$form_state){
  ctools_include('form');
  ctools_include('modal');
  ctools_include('ajax');
  ctools_add_js('ajax-responder');
  ctools_modal_add_js();
  ctools_include('object-cache');
  
  $commands=array();
  $values=$form_state['values'];
  $type=$values['type'];
  
  $node=new stdClass;
  $node->type=$type;


  $new_form_state['type']=$type;
  $new_form_state[$type]['#node']=$node;
  $new_form_state[$type]['type']=$type;
  $new_form_state['target']=$form_state["parents"];
  $new_form_state['parents']=$form_state["parents"];
  
  
  $new_form = ctools_build_form('wallyedit_form_addnode_form', $new_form_state);
  //$new_form = ctools_build_form('wallyedit_formezfze_node_edition_form', $new_form_state);
  $commands[] = ctools_ajax_command_html('#wallyedit_container', $new_form);
  
  $commands[] = ctools_ajax_command_html('#wallyedit_messages', theme_status_messages());
    
    
  ctools_ajax_render($commands); 
  
}

function wydit_prepare_inline_form_element(&$form_element,$form_state,$element,$fields,$parents){
  //$node=node_load($form_element[0]['#default_value']['nid']);
  
  $type_name=$form_state['type'];
  $type=wydit_get_infos_type($type_name);
  $fields = $type['fields'];
  
  $node=$form_state["#node"];
  
  $type_name=$form_state["type"];
  
  $form_state[$node->type]['#node']=$node->node;
  $form_state['type']=$node->type;
  $form_state['#node']=$form_state[$type_name]['#node'];
  //@todo: remove the node key prefere #node
  $form_state[$type_name]['node']=$node;
  
  //$a=array("#false"=>true);      
  $a=drupal_retrieve_form($type_name.'_node_form',$form_state,$form_state[$type_name]['node']);
  drupal_prepare_form($type_name.'_node_form',$a,$form_state);

  $form=array("#type"=>'fieldset');
  unset($a["#type"]);
  unset($a["form_id"]);
  unset($a["#validate"]);
  unset($a["#parents"]);
  
  
          
  
 // unset($a["#parents"]);
  $form[$type_name]=array("#type"=>'fieldset');
  foreach(element_children($a) as $element_name){
    $form[$type_name][$element_name]=$a[$element_name];

    //WARNNING: FIELDS DOESN4T EXIST CAUSE THERE ARE FIELDS FROM THE MAIN CONTENT, SHOUL BRING DIELD INFO FROM NODEREFERENCE CONTENT TYPE
    if(isset($fields[$element_name]) and $fields[$element_name]['display_settings']["wallyedit"]==1 ){
      $form[$type_name][$element_name]["#parents"]=$parents;
    }
  }
  
  wydit_prepare_primary_package_form($form,$form_state,$element,$fields,$parents);
  
  wydit_remove_form_infos($form);
  //$form[$type_name]['select_existing']=array("#type"=>"submit","#value"=>"Select an existing node");
  /*
  
  $form[$type_name]=drupal_retrieve_form($type_name.'_node_form',$form_state,$form_state[$type_name]['node']);
  
  
  drupal_prepare_form($type_name.'_node_form',$form[$type_name],$form_state[$type_name]);
  wydit_prepare_primary_package_form($form[$type_name],$form_state[$type_name],$type,$fields);
  
  
  $form[$type_name]["#tree"]=true;
  wydit_remove_form_infos($form[$type_name]);
  */
  $form_element=$form;
}
function wydit_prepare_selectbox_form_element(&$form_element,$form_state,$element,$fields,$parents){
 
  $form=array(
      "#theme"=>'wydit_selector_theme',
  );
  
  foreach($form_state as $key=>$embed){
    $embed_node=$embed["#node"];

    $form[ $key]['title']=array(
      "#type"=>"markup",
      "#value"=> $embed_node->title,
    );
    $form[$key]['edit_action']=array(
      "#type"=>"submit",
      "#value"=>'edit',
      "#name"=>'edit__'.$key,
      '#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
      "#parents"=>array_merge($parents,array($key))
    );
    $form[$key]['delete_action']=array(
      "#type"=>"submit",
      "#value"=>'remove',
      "#name"=>'remove__'.$key,
      '#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
      "#parents"=>array_merge($parents,array("$key"))
    );
    
  }
  $form['add_existing_action']=array(
    "#type"=>"submit",
    "#value"=>'add existing one',
    "#name"=>'add_existing',
    "#attributes"=>array('class' => 'form-submit ctools-use-ajax'),
    "#parents"=>$parents
  );
  $form['add_new_action']=array(
    "#type"=>"submit",
    "#value"=>'add new one',
    "#name"=>'add_new',
    '#attributes'=>array('class' => 'form-submit ctools-use-ajax'),
    "#parents"=>$parents
  );
  $form_element=$form;
}


//___________________________________________________
function wydit_remove_form_infos(& $form){
  $form["#type"]='fieldset';
  /*
  unset($form["#id"]);
  unset($form["form_id"]);
  unset($form["#token"]);
  unset($form["#parameters"]);
  unset($form["#method"]);
  unset($form["#cache"]);
  unset($form["#action"]);
  unset($form["#form_token"]);
  unset($form["#attributes"]);
  unset($form["#type"]);
  */
}

function wydit_get_infos_type($type_name){
  module_load_include("inc",'content','includes/content.node_form');
  $type=content_types($type_name);
  return $type;
   
}



//______________________________

function prenode_load($nid,$reload_node=FALSE){
  $prenode=new Prenode($nid,$reload_node);
  return $prenode;
}
//_______________________________

function wydit_changetypefromfieldset(& $fieldset,$fields){
  if(count($fieldset)==7){
  unset($fieldset['#type']);
  }
 // foreach(element_children($fieldset))


}

/*
NODE PUBLICATION
 */
function wydit_publish_prenode(&$form_state){
  $form_state[$form_state['type']]=$form_state[$form_state['type']];
  $form_state['type']=$form_state['type'];
  
  $type_name=$form_state['type'];
  $type=wydit_get_infos_type($type_name);
  $fields = $type['fields'];
  
  foreach($fields as $field){
    if($field['display_settings']["wallyedit"]>1){
    //  dsm($field,$field['field_name']);     
      if(isset($form_state[$form_state['type']][$field['field_name']])){
      foreach($form_state[$form_state['type']][$field['field_name']] as $key=>$value){
        $nid=wydit_publish_prenode($form_state[$form_state['type']][$field['field_name']][$key]);
        unset($form_state[$form_state['type']][$field['field_name']][$key]);
        $form_state[$form_state['type']][$field['field_name']][$key]['nid']=$nid;
        }
      }
      //dsm($form_state[$form_state['type']][$field['field_name']]);
      $form_state[$form_state['type']]['#node']->{$field['field_name']}= $form_state[$form_state['type']][$field['field_name']];

    }

  }
 return wydit_publish_prenode_save($form_state);
 // return $form_state;

  
}

function wydit_publish_prenode_save(& $form_state){
//return rand();
$b=$form_state['#node'];
  $node=node_save($b);

//$form_state['#node']=$node;
//dsm($node->nid);
return $node->nid;
}

/*
FORM_STATE MANAGEMENT
*/

//Thx to JDE
function wydit_remove_element($a, $b, $level=0){
  foreach($a as $key => $value){
    if($key == $b[$level]){ //on atteint l'elem de $a correspondant au $path dans $b pour ce niveau de traitement
	  if($level != (count($b)-1)){ //On est pas encore au dernier niveau de traitement
		if(is_array($value)){//logique car il y a encore des niveaux à traiter dans $b;
		  $a[$key] = wydit_remove_element($value, $b, $level+1);
		}
	  }
	  else{
	    unset($a[$b[$level]]); 
	  }	
	}
  }
  return $a;
}



function wydit_add_to_form_state(&$form_state,$element,$target,$append=FALSE){
  if(count($target)>0){
    if(isset($form_state[$target[0]])){
      $key=$target[0];
      array_shift($target);
      wydit_add_to_form_state($form_state[$key],$element,$target,$append);
    }
    
  }
  else{
    if($append===TRUE){
      $form_state[]=$element;
    }
    else{
      
      $form_state=$element;
    }
  }
}
  
function wydit_save_form_state($clean_form_state){
  
  ctools_object_cache_set('prenode', $clean_form_state[$clean_form_state['type']]['#node']->nid, $clean_form_state);
  
}

function wydit_clean_form_state($form_state){

  $a[$form_state['type']]=$form_state[$form_state['type']];
  $a['type']=$form_state['type'];
  
  $type_name=$form_state['type'];
  
  $type=wydit_get_infos_type($type_name);
  $fields = $type['fields'];
  
  foreach($fields as $field){
         
    if($field['display_settings']["wallyedit"]>1){
      if(isset($form_state[$form_state['type']][$field['field_name']])){
      
      foreach($form_state[$form_state['type']][$field['field_name']] as $key=>$value)
        $a[$form_state['type']][$field['field_name']][$key]['#node']=(object)((array)node_submit($form_state['values'][$form_state['type']][$field['field_name']][$key])+(array)$form_state[$form_state['type']][$field['field_name']][$key]['#node']);
        $a[$form_state['type']][$field['field_name']][$key]['type']=$a[$form_state['type']][$field['field_name']][$key]['#node']->type;
      }
    }
  }
  return $a;
}

function wydit_clean_and_save_form_state($form_state){
 wydit_save_form_state((wydit_clean_form_state($form_state)));
}
function wydit_get_infos_groups($type_name){
    module_load_include("inc",'content','includes/content.node_form');
  
$groups = array();
  if (module_exists('fieldgroup')) {
    $groups = fieldgroup_groups($type_name);
  }
 return $groups; 
}


function wydit_get_current_node_from_parents(&$form_state,$parents=NULL){
  
  if($parents==NULL)
    $parents=$form_state['parents'];
  
  $temp=$form_state;
  foreach($parents as $index=>$cursor_name){
    if(isset($temp[$cursor_name])){
      $temp=& $temp[$cursor_name];
    }
  }
  if($temp["#node"]){
    return $temp["#node"];
  }
  else return NULL;
  
}

function wydit_get_url_action($action,$nid){
  switch ($action){
    case 'edit':
      return 'node/'.$nid.'/edit2/1';
    break;
  }
}




/*
$a=array('A'=>'A','b'=>array('c'=>'A','d'=>'E') ,'d'=>'A');
  $b=& $a['b']['c'];
  unset($b);
  // eval("unset($a)");
  dsm(array_filter($a,'wydit_is_not_null'),aaa);
  
function wydit_is_not_null($element){
return !is_null($element);
}
*/