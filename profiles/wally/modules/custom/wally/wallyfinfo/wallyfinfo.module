<?php

include_once('wallyfinfo.features.inc');

/**
 *  Implémentation du hook_menu(); 
 */
function wallyfinfo_menu() {
  $items = array();
  
  $items['view/fil_info'] = array(
    'description' => t('Get view display for fil_info.'), 
    'page callback' => 'wallyfinfo_getviewfinfo', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
* Implementation of hook_theme().
*/
function wallyfinfo_theme($existing) {  
  return array(
    'views_view__fil_info__panel_pane_1' => array(
      'arguments' => array('view' => NULL),
      'template' => 'views-view--fil-info--panel-pane-1',
      'original hook' => 'views_view',
      'path' => drupal_get_path('module', 'wallyfinfo') . '/templates',
    ),
    'views_view__fil_info__panel_pane_2' => array(
      'arguments' => array('view' => NULL),
      'template' => 'views-view--fil-info--panel-pane-2',
      'original hook' => 'views_view',
      'path' => drupal_get_path('module', 'wallyfinfo') . '/templates',
    ),
    'views_view__fil_info__panel_pane_3' => array(
      'arguments' => array('view' => NULL),
      'template' => 'views-view--fil-info--panel-pane-3',
      'original hook' => 'views_view',
      'path' => drupal_get_path('module', 'wallyfinfo') . '/templates',
    ),
    'panels_pane' => array(
      'arguments' => array('output' => array(), 'pane' => array(), 'display' => array()),
      'original hook' => 'panels_pane',
      'path' => drupal_get_path('module', 'wallyfinfo') . '/templates',
    ),
    'views_view__fil_info__panel_pane_1__li' => array(
      'arguments' => array('destination' => NULL, 'view_result' => NULL),
      'template' => 'views-view--fil-info--panel-pane-1--li',
      'path' => drupal_get_path('module', 'wallyfinfo') . '/templates',
    ),
    'views_view__fil_info__panel_pane_2__li' => array(
      'arguments' => array('destination' => NULL, 'view_result' => NULL),
      'template' => 'views-view--fil-info--panel-pane-2--li',
      'path' => drupal_get_path('module', 'wallyfinfo') . '/templates',
    ),
  );
}

/**
 *  Implémentation du hook_form_FORM_ID_form_alter(); 
 */
function wallyfinfo_form_views_content_views_panes_content_type_edit_form_alter(&$form, &$form_state) {
  if ($form_state['subtype_name'] == 'fil_info-panel_pane_1' || $form_state['subtype_name'] == 'fil_info-panel_pane_2') {
    $all_voc = taxonomy_get_vocabularies();
    foreach ($all_voc as $voc) {
      if ($voc->name == 'Destination Path') {
        //$available_dests = taxonomy_get_tree($voc->vid, 0, -1, 1);
        $available_dests = taxonomy_get_tree($voc->vid);
        break;
      }
    }
    
    $available_dests_conf = $form_state['conf']['available_dests'];
    $form['available_dests']['contextual'] = array (
      '#type'             => 'checkbox',
      '#title'            => 'Use the contextual destination.',
      '#description'      => 'If checked, only this one will be used.',
      '#default_value'    => ($available_dests_conf[0] == 'contextual') ? 1 : 0,
    );
    
    foreach ($available_dests as $available_dest) {
      $form['available_dests'][$available_dest->name] = array (
        '#type'             => 'checkbox',
        '#title'            => $available_dest->name,
        '#default_value'    => is_object($available_dests_conf[$available_dest->name]) ? 1 : 0,
      );
    }
    $form['#submit'][] = 'wallyfinfo_form_views_content_views_panes_content_type_edit_form_submit';
  }
}
  
function wallyfinfo_form_views_content_views_panes_content_type_edit_form_submit(&$form, &$form_state) {
  if ($form_state['subtype_name'] == 'fil_info-panel_pane_1' || $form_state['subtype_name'] == 'fil_info-panel_pane_2') {
    $form_state['conf']['available_dests'] = array();
    
    if ($form['available_dests']['contextual']['#value']) {
      $form_state['conf']['available_dests'][] = 'contextual';
      return;
    }
  
    $all_voc = taxonomy_get_vocabularies();
    foreach ($all_voc as $voc) {
      if ($voc->name == 'Destination Path') {
        //$available_dests = taxonomy_get_tree($voc->vid, 0, -1, 1);
        $available_dests = taxonomy_get_tree($voc->vid);
        break;
      }
    }
  
    foreach ($available_dests as $available_dest) {
      if ($form['available_dests'][$available_dest->name]['#value']) {
        $form_state['conf']['available_dests'][$available_dest->name] = $available_dest;
      }
    }
  }
}

/**
 *  Implémentation du hook_preprocess_panels_pane(); 
 */
function phptemplate_engine_preprocess_panels_pane(&$variables) {
  $suggestion = array(); 
  $suggestion = wallycontenttypes_getpackagesuggestions($variables, 'panels_pane'); 
  if(count($suggestion)) $variables['template_files'] = array_merge($suggestion, $variables['template_files']);
}

/**
 * Print a HTML list containing the fields returned by one of the display of the 'fil_info' view.
 * 
 * @param string $display_name
 * 	 Name of display in the 'fil_info' view.
 * 	 Example : 'panel_pane_1'.
 * @param int $dest_id
 *   Taxonomy term id ('tid') of the requested destination.
 * @param int $offset
 *   Offset in the view results.
 * 
 * @return
 * 	 No value but print the HTML code.
 */
function wallyfinfo_getviewfinfo($display_name = NULL, $dest_id = NULL, $offset = 0) {
  $all_display = array();
  $cid = 'wallyfinfo_'.str_replace('_', '-', $display_name).'_'.$dest_id.'_'.($offset-($offset%10));
  $cached_display = cache_get($cid);
  
  if ($cached_display == 0 || !isset($cached_display) || empty($cached_display)) {
    $destination = taxonomy_get_term($dest_id);
    $view_results = array();
    $view_results = views_get_view_result('fil_info', $display_name, $dest_id);
    
    foreach ($view_results as $view_result) {
      $all_display[] = theme('views_view__fil_info__'.$display_name.'__li', $destination, $view_result);
    }
    
    cache_set($cid, $all_display, 'cache', time() + 60);
  } else {
    $all_display = $cached_display->data;
  }

  print $all_display[$offset];
}

/**
 * Return the javascript code to use the jCarousel effect in the 'page' fil_info.
 * 
 * @param array $available_dests
 *   Array of the first level 'Destination Path' taxonomy terms.
 * 
 * @return
 * 	 The js code.
 * 
 * @todo
 *   Change CSS to make it more adaptative.
 */
function _wallyfinfo_slidecategoryjs_page($available_dests) {  
  static $first_inc_page = TRUE;
  
  $jscode = '';
  
  if (!$first_inc_page)
    return $jscode;

  $first_inc_page = FALSE;
  
  $jscode .= '
  	$(document).ready(function() {
  	  var page_offset_page = 0;';
  
  if (sizeof($available_dests)>1) {
    // jCarousel effect for the categories menu.
    $jscode .= '
        $("#catmenu").jcarousel({
          wrap: "both",
          size: '.sizeof($available_dests).',
          visible: 3,
          buttonNextHTML: "<img src=\"'.base_path().drupal_get_path("module", "wallyfinfo").'/images/nexthoriz.png\" class=\"nextCat_page\"/>",
          buttonPrevHTML: "<img src=\"'.base_path().drupal_get_path("module", "wallyfinfo").'/images/previoushoriz.png\" class=\"prevCat_page\"/>",
          buttonNextEvent: "click",
          buttonPrevEvent: "click"
        });
        var carouselCat_page = $("#catmenu").data("jcarousel");
        
        $("#catmenu .jcarousel-clip").css("width", "100%");
        $("#catmenu .jcarousel-clip").css("height", "100%");
        
        $(".nextCat_page").css("float", "right");
        $(".nextCat_page").css("width", "15px");
        $(".nextCat_page").css("right", "0");
        $(".nextCat_page").css("margin-top", "10px");
        $(".nextCat_page").css("margin-bottom", "15px");
        $(".nextCat_page").css("margin-left", "5px");
        $(".nextCat_page").css("cursor", "pointer");
        $(".nextCat_page").css("cursor", "hand");
        
        $(".prevCat_page").css("float", "left");
        $(".prevCat_page").css("width", "15px");
        $(".prevCat_page").css("margin-top", "10px");
        $(".prevCat_page").css("margin-bottom", "15px");
        $(".prevCat_page").css("margin-right", "5px");
        $(".prevCat_page").css("cursor", "pointer");
        $(".prevCat_page").css("cursor", "hand");';
    
    $offset = 0;
    foreach ($available_dests as $available_dest) {
      ++$offset;
      $jscode .= '
        carouselCat_page.add('.$offset.', "<a id=\"'.strtolower($available_dest->name).'_page\">'.$available_dest->name.'</a>");';
    }
    
    $jscode .= '
        $("#catmenu .jcarousel-clip li").css("text-align", "center");
        carouselCat_page.first = 1;
        carouselCat_page.reload();';
  }
  
  // jCarousel effect for the items.
  foreach ($available_dests as $available_dest) {
    $jscode .= '
      $("#car'.strtolower($available_dest->name).'_page").jcarousel({
      	vertical: true,
      	size: 10,
        visible: 10,
        auto: 0,
      });
      var carousel'.$available_dest->name.'_page = $("#car'.strtolower($available_dest->name).'_page").data("jcarousel");';
  }
  
  // Hide all categories at start.
  foreach ($available_dests as $key=>$available_dest) {
    $jscode .= '
      $("#car'.strtolower($available_dest->name).'_page").hide();';
  }
  
  foreach ($available_dests as $key=>$available_dest) {
    $jscode .= '
      var currentCarousel_page = carousel'.$available_dest->name.'_page;
  	  var currentCarouselName_page = "'.strtolower($available_dest->name).'_page";
  	  var currentTid_page = '.$available_dest->tid.'';
    break;
  }
  
  if (sizeof($available_dests)>1) {
    // Definition of the click actions for the categories labels.
    foreach ($available_dests as $key=>$available_dest) {
      $jscode .= '
        $("a#'.strtolower($available_dest->name).'_page").click(function() {
          page_offset_page = 0;
          currentCarousel_page = carousel'.$available_dest->name.'_page;
          currentCarouselName_page = "'.strtolower($available_dest->name).'_page";
          currentTid_page = "'.$available_dest->tid.'";
          reload_carousel_page(currentCarousel_page, currentCarouselName_page, currentTid_page);
        });';
    }
  }
  
  // Pager events.
  for ($i=1; $i<6; $i++) {
    $jscode .= '
      $(".pager_page #page'.$i.'").click(function() {
        page_offset_page = '.(10*($i-1)).';
        reload_carousel_page(currentCarousel_page, currentCarouselName_page, currentTid_page);
      });
      $(".pager_page #page'.$i.'bis").click(function() {
        page_offset_page = '.(10*($i-1)).';
        reload_carousel_page(currentCarousel_page, currentCarouselName_page, currentTid_page);
      });';
  }
  
  $jscode .= '
      reload_carousel_page(currentCarousel_page, currentCarouselName_page, currentTid_page);';
  
  $jscode .= '
      function reload_carousel_page(carousel, dest_name, tid) {';
  	// Hide all categories except de concerned and empty all carousels.
    foreach ($available_dests as $av_dest) {
      if ($av_dest->name != $available_dest->name) {
      $jscode .= '
        $("#car'.strtolower($av_dest->name).'_page").hide();
        $("#car'.strtolower($av_dest->name).'_page .jcarousel-clip").css("height", "0px");';
      }
      $jscode .= '
      	carousel'.$av_dest->name.'_page.list.empty();
        $("ul#liste'.strtolower($av_dest->name).' li").remove();';
    }
    
    // Show the concerned category, add items to the concerned carousel and restart it.
    $jscode .= '
        $("#car" + dest_name).show();
        $("#car" + dest_name + " .jcarousel-clip").css("height", "2300px");

        for (offset = 0; offset < 10; offset++) {
          carousel.add(offset+1, $.ajax({
                                   url: "/view/fil_info/panel_pane_2/" + tid + "/" + (offset+page_offset_page),
                                   async: false
                                 }).responseText);
        }
        
        carousel.first = 1;
  	    carousel.reload();
  	    carousel.startAuto(carousel.options.auto);
	  }
  	});';
  
  return $jscode;
}

/**
 * Return the javascript code to use the jCarousel effect in the 'box' fil info.
 * 
 * @param array $available_dests
 *   Array of the first level 'Destination Path' taxonomy terms.
 * 
 * @return
 * 	 The js code.
 */
function _wallyfinfo_slidecategoryjs_box($available_dests) {
  static $first_inc_box = TRUE;

  $jscode = '';
  
  if (!$first_inc_box)
    return $jscode;
    
  $first_inc_box = FALSE;

  $jscode .= '
  	$(document).ready(function() {
  	  var page_offset = 0;';
  
  if (sizeof($available_dests)>1) {
    // jCarousel effect for the categories menu.
    $jscode .= '
        $("#filcat").jcarousel({
          wrap: "both",
          size: '.sizeof($available_dests).',
          visible: 3,
          buttonNextHTML: "<img src=\"'.base_path().drupal_get_path("module", "wallyfinfo").'/images/nexthorizblanc.png\" class=\"nextCat\"/>",
          buttonPrevHTML: "<img src=\"'.base_path().drupal_get_path("module", "wallyfinfo").'/images/previoushorizblanc.png\" class=\"prevCat\"/>",
          buttonNextEvent: "click",
          buttonPrevEvent: "click"
        });
        var carouselCat = $("#filcat").data("jcarousel");
        
        $("#filcat .jcarousel-clip").css("width", "100%");
        $("#filcat .jcarousel-clip").css("height", "100%");
        
        $(".nextCat").css("float", "right");
        $(".nextCat").css("width", "15px");
        $(".nextCat").css("right", "0");
        $(".nextCat").css("margin-top", "0px");
        $(".nextCat").css("margin-bottom", "15px");
        $(".nextCat").css("margin-left", "5px");
        $(".nextCat").css("cursor", "pointer");
        $(".nextCat").css("cursor", "hand");
        
        $(".prevCat").css("float", "left");
        $(".prevCat").css("width", "15px");
        $(".prevCat").css("margin-top", "0px");
        $(".prevCat").css("margin-bottom", "15px");
        $(".prevCat").css("margin-right", "5px");
        $(".prevCat").css("cursor", "pointer");
        $(".prevCat").css("cursor", "hand");';
    
    $offset = 0;
    foreach ($available_dests as $available_dest) {
      ++$offset;
      $jscode .= '
        carouselCat.add('.$offset.', "<a id=\"'.strtolower($available_dest->name).'\">'.$available_dest->name.'</a>");';
    }
  
    $jscode .= '
        $("#filcat .jcarousel-clip li").css("text-align", "center");
        carouselCat.first = 1;
        carouselCat.reload();';
  }
  
  // jCarousel effect for the items.
  foreach ($available_dests as $available_dest) {
    $jscode .= '
      $("#car'.strtolower($available_dest->name).'").jcarousel({
      	vertical: true,
      	size: 10,
        scroll: 2,
        visible: 4,
        auto: 2,
        animation: "slow",
        buttonNextHTML: "<img src=\"'.base_path().drupal_get_path("module", "wallyfinfo").'/images/next.png\" class=\"next\"/>",
        buttonPrevHTML: "<img src=\"'.base_path().drupal_get_path("module", "wallyfinfo").'/images/previous.png\" class=\"prev\"/>",
        buttonNextEvent: "click",
        buttonPrevEvent: "click"
      });
      var carousel'.$available_dest->name.' = $("#car'.strtolower($available_dest->name).'").data("jcarousel");';
  }
  
  // Hide all categories at start.
  foreach ($available_dests as $key=>$available_dest) {
    $jscode .= '
      $("#car'.strtolower($available_dest->name).'").hide();';
  }
  
  
  foreach ($available_dests as $key=>$available_dest) {
    $jscode .= '
      var currentCarousel = carousel'.$available_dest->name.';
  	  var currentCarouselName = "'.strtolower($available_dest->name).'";
  	  var currentTid = '.$available_dest->tid.';';
    break;
  }
  
  if (sizeof($available_dests)>1) {
    // Definition of the click actions for the categories labels.
    foreach ($available_dests as $key=>$available_dest) {
      $jscode .= '
        $("a#'.strtolower($available_dest->name).'").click(function() {
          page_offset = 0;
          currentCarousel = carousel'.$available_dest->name.';
          currentCarouselName = "'.strtolower($available_dest->name).'";
          currentTid = "'.$available_dest->tid.'";
          reload_carousel(currentCarousel, currentCarouselName, currentTid);
        });';
    }
  }
  
  // Pager events.
  for ($i=1; $i<6; $i++) {
    $jscode .= '
      $(".pager #page'.$i.'").click(function() {
        page_offset = '.(10*($i-1)).';
        reload_carousel(currentCarousel, currentCarouselName, currentTid);
      });';
  }
  
  $jscode .= '
      reload_carousel(currentCarousel, currentCarouselName, currentTid);';
  
  $jscode .= '
      function reload_carousel(carousel, dest_name, tid) {';
  	// Hide all categories except de concerned and empty all carousels.
    foreach ($available_dests as $av_dest) {
      if ($av_dest->name != $available_dest->name) {
      $jscode .= '
        $("#car'.strtolower($av_dest->name).'").hide();
        $("#car'.strtolower($av_dest->name).' .jcarousel-clip").css("height", "0px");';
      }
      $jscode .= '
      	carousel'.$av_dest->name.'.list.empty();';
        //$("ul#liste'.strtolower($av_dest->name).' li").remove();';
    }
    
    // Show the concerned category, add items to the concerned carousel and restart it.
    $jscode .= '
        $("#car" + dest_name).show();
        $("#car" + dest_name + " .jcarousel-clip").css("height", "300px");
        
        $(".next").css("float", "right");
        $(".next").css("width", "15px");
        $(".next").css("margin-right", "10px");
        $(".next").css("cursor", "pointer");
        $(".next").css("cursor", "hand");
        
        $(".prev").css("float", "left");
        $(".prev").css("width", "15px");
        $(".prev").css("margin-left", "10px");
        $(".prev").css("cursor", "pointer");
        $(".prev").css("cursor", "hand");

        for (offset = 0; offset < 10; offset++) {

          carousel.add(offset+1, $.ajax({
                                   url: "/view/fil_info/panel_pane_1/" + tid + "/" + (offset+page_offset),
                                   async: false
                                 }).responseText);
        }
        
        carousel.first = 1;
  	    carousel.reload();
  	    carousel.startAuto(carousel.options.auto);
	  }
  	});';
  
  return $jscode;
}

/**
 * Return the javascript code to use the jCarousel effect in the 'thicker' fil_info.
 * 
 * @param array $available_dests
 *   Array of the first level 'Destination Path' taxonomy terms.
 * 
 * @return
 * 	 The js code.
 * 
 * @todo
 *   Change CSS to make it more adaptative.
 */
function _wallyfinfo_slidecategoryjs_thicker() {  
  static $first_inc_thicker = TRUE;
  
  $jscode = '';
  
  if (!$first_inc_thicker)
    return $jscode;

  $first_inc_thicker = FALSE;
  
  $jscode .= '
    $(document).ready(function() {
      $("#thicker").jCarouselLite({
      	auto: 2500,
      	speed: 1200,
      	vertical: false,
      	visible: 1,
      	circular: true,
      });
    });';
  
  return $jscode;
}
