<?php

/**
 * Implementation of hook_install();
 */
function wallycontenttypes_install() {
  _wallycontenttypes_install_presets(); 
  drupal_install_schema('wallycontenttypes');
}

/**
 * Implementation of hook_uninstall();
 */
function wallycontenttypes_uninstall() {
  _wallycontenttypes_uninstall_presets();
  drupal_uninstall_schema('wallycontenttypes');
  wallytoolbox_variable_del_like('wallycontenttypes_');
}

function _wallycontenttypes_install_presets() {
  // @see wallyct_photoobject_slider.tpl.php
  if (!imagecache_preset_by_name('sm_event_main')) {
    $imagecachepreset = imagecache_preset_save(array('presetname' => 'sm_event_main'));
    $imagecacheaction = new stdClass ();
    $imagecacheaction->presetid = $imagecachepreset['presetid'];
    $imagecacheaction->module = 'wallycontenttypes';
    $imagecacheaction->action = 'wallycontenttypes_wallycrop';
    $imagecacheaction->data = array('width' => 270, 'height' => 200, 'xoffset' => "center", 'yoffset' => "center", 'presetid' => $imagecachepreset['presetid']);
    $imagecacheaction->weight = 0;
    drupal_write_record('imagecache_action', $imagecacheaction);
    $imagecacheaction->module = 'imagecache';
    $imagecacheaction->action = 'imagecache_scale';
    $imagecacheaction->data = array('width' => 270, 'height' => 200, 'upscale' => true);
    $imagecacheaction->weight = 1;
    drupal_write_record('imagecache_action', $imagecacheaction);
  }
  
  if (!imagecache_preset_by_name('slider_preset')) {
    $imagecachepreset = imagecache_preset_save(array('presetname' => 'slider_preset'));
    $imagecacheaction = new stdClass ();
    $imagecacheaction->presetid = $imagecachepreset['presetid'];
    $imagecacheaction->module = 'wallycontenttypes';
    $imagecacheaction->action = 'wallycontenttypes_wallycrop';
    $imagecacheaction->data = array('width' => 270, 'height' => 200, 'xoffset' => "center", 'yoffset' => "center", 'presetid' => $imagecachepreset['presetid']);
    $imagecacheaction->weight = 0;
    drupal_write_record('imagecache_action', $imagecacheaction);
    $imagecacheaction->module = 'imagecache';
    $imagecacheaction->action = 'imagecache_scale';
    $imagecacheaction->data = array('width' => 270, 'height' => 200, 'upscale' => true);
    $imagecacheaction->weight = 1;
    drupal_write_record('imagecache_action', $imagecacheaction);
  }
  
  if (!imagecache_preset_by_name('theme_medium_article_preset')) {
    $imagecachepreset = imagecache_preset_save(array('presetname' => 'theme_medium_article_preset'));
    $imagecacheaction = new stdClass ();
    $imagecacheaction->presetid = $imagecachepreset['presetid'];
    $imagecacheaction->module = 'wallycontenttypes';
    $imagecacheaction->action = 'wallycontenttypes_wallycrop';
    $imagecacheaction->data = array('width' => 90, 'height' => 90, 'xoffset' => "center", 'yoffset' => "center", 'presetid' => $imagecachepreset['presetid']);
    $imagecacheaction->weight = 0;
    drupal_write_record('imagecache_action', $imagecacheaction); 
    $imagecacheaction->module = 'imagecache';
    $imagecacheaction->action = 'imagecache_scale';
    $imagecacheaction->data = array('width' => 90, 'height' => 90, 'upscale' => true);
    $imagecacheaction->weight = 1;
    drupal_write_record('imagecache_action', $imagecacheaction);
  }
  
  if (!imagecache_preset_by_name('theme_large_article_preset')) {
    $imagecachepreset = imagecache_preset_save(array('presetname' => 'theme_large_article_preset'));
    $imagecacheaction = new stdClass ();
    $imagecacheaction->presetid = $imagecachepreset['presetid'];
    $imagecacheaction->module = 'wallycontenttypes';
    $imagecacheaction->action = 'wallycontenttypes_wallycrop';
    $imagecacheaction->data = array('width' => 270, 'height' => 200, 'xoffset' => "center", 'yoffset' => "center", 'presetid' => $imagecachepreset['presetid']);
    $imagecacheaction->weight = 0;
    drupal_write_record('imagecache_action', $imagecacheaction); 
    $imagecacheaction->module = 'imagecache';
    $imagecacheaction->action = 'imagecache_scale';
    $imagecacheaction->data = array('width' => 270, 'height' => 200, 'upscale' => true);
    $imagecacheaction->weight = 1;
    drupal_write_record('imagecache_action', $imagecacheaction);
  }
  
  if (!imagecache_preset_by_name('gallery_preset')) {
    $imagecachepreset = imagecache_preset_save(array('presetname' => 'gallery_preset'));
    $imagecacheaction = new stdClass ();
    $imagecacheaction->presetid = $imagecachepreset['presetid'];
    $imagecacheaction->module = 'wallycontenttypes';
    $imagecacheaction->action = 'wallycontenttypes_wallycrop';
    $imagecacheaction->data = array('width' => 270, 'height' => 200, 'xoffset' => 0, 'yoffset' => 0, 'presetid' => $imagecachepreset['presetid']);
    $imagecacheaction->weight = 0;
    drupal_write_record('imagecache_action', $imagecacheaction); 
    $imagecacheaction->module = 'imagecache';
    $imagecacheaction->action = 'imagecache_scale';
    $imagecacheaction->data = array('width' => 75, 'height' => 75, 'upscale' => true);
    $imagecacheaction->weight = 1;
    drupal_write_record('imagecache_action', $imagecacheaction);
  }
}

function _wallycontenttypes_uninstall_presets() {
  // Deleting ImageCache presets
  if (!imagecache_preset_by_name('sm_event_main')) {
    imagecache_preset_delete(imagecache_preset_by_name('sm_event_main'));
  }
  
  // @see wallyct_photoobject_slider
  if (!imagecache_preset_by_name('slider_preset')) {
    imagecache_preset_delete(imagecache_preset_by_name('slider_preset'));
  }

  if (!imagecache_preset_by_name('theme_large_article_preset')) {
    imagecache_preset_delete(imagecache_preset_by_name('theme_large_article_preset'));
  }

  if (!imagecache_preset_by_name('theme_medium_article_preset')) {
    imagecache_preset_delete(imagecache_preset_by_name('theme_medium_article_preset'));
  }
  if (!imagecache_preset_by_name('gallery_preset')) {
    imagecache_preset_delete(imagecache_preset_by_name('gallery_preset'));
  }
}

function wallycontenttypes_schema() {
  $schema = array();
  
  return $schema;
}

function wallycontenttypes_update_6100(&$sandbox) {
	$imagecachepreset = imagecache_preset_save(array('presetname' => 'gallery_preset'));
  $imagecacheaction = new stdClass ();
  $imagecacheaction->presetid = $imagecachepreset['presetid'];
  $imagecacheaction->module = 'wallycontenttypes';
  $imagecacheaction->action = 'wallycontenttypes_wallycrop';
  $imagecacheaction->data = array('width' => 270, 'height' => 200, 'xoffset' => 0, 'yoffset' => 0, 'presetid' => $imagecachepreset['presetid']);
  $imagecacheaction->weight = 0;
  drupal_write_record('imagecache_action', $imagecacheaction); 
  $imagecacheaction->module = 'imagecache';
  $imagecacheaction->action = 'imagecache_scale';
  $imagecacheaction->data = array('width' => 75, 'height' => 75, 'upscale' => true);
  $imagecacheaction->weight = 1;
  drupal_write_record('imagecache_action', $imagecacheaction);
}

function wallycontenttypes_update_6101(&$sandbox) {
  $ret = array();
  
  $tables = array(
    'wallycontenttypes_rssmixread_content',
    'wallycontenttypes_rssread_content',
    'wallycontenttypes_taxonomylist_content',
    'wallycontenttypes_twitread_content',
    'wallycontenttypes_remotehtml_content',
  );
  
  foreach ($tables as $table)
    db_drop_table($ret, $table);
  
  return $ret;
}

function wallycontenttypes_update_6102(){
  
  $ret = array();
  
  //Add the vocabularies IPTC and Concepts if they do not exist.
  $new_voc = array();
  $new_voc['tags'] = 0;
  $new_voc['multiple'] = 0;
  $new_voc['required'] = 0;
  $new_voc['weight'] = 0;
  $new_voc['hierarchy'] = 1;
  $new_voc['relations'] = 1;
 
  if (wallytoolbox_taxonomy_getvocabularyvidbyname('IPTC') == NULL){
    $new_voc['name'] = 'IPTC';
    taxonomy_save_vocabulary($new_voc);
  
    
    //Add IPTC to Package and objects
    $schema['content_field_iptc'] = array(
    'fields' => array(
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'delta' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'field_iptc_value' => array(
        'type' => 'int',
        'not null' => FALSE,
        'default' => NULL,
      ),
    ),
    'primary key' => array('vid','delta'),//primary key
    'indexes' => array(
      'nid'    => array('nid'),
    ),
  );
    
    
    db_create_table($ret, 'content_field_iptc', $schema['content_field_iptc']);
    
    
    
    $content_node_field = new stdClass();
    $content_node_field->field_name = 'field_iptc';
    $content_node_field->type = 'content_taxonomy';
    $content_node_field->global_settings = 'a:5:{s:14:"save_term_node";i:1;s:3:"vid";s:2:"14";s:6:"parent";s:1:"0";s:15:"parent_php_code";s:0:"";s:5:"depth";s:0:"";}';
    $content_node_field->required = 0;
    $content_node_field->multiple = 1;
    $content_node_field->db_storage = 0;
    $content_node_field->module = 'content_taxonomy';
    $content_node_field->db_columns = 'a:1:{s:5:"value";a:3:{s:4:"type";s:3:"int";s:8:"not null";b:0;s:8:"sortable";b:0;}}';
    $content_node_field->active = 1;
    $content_node_field->locked = 0;
    drupal_write_record('content_node_field', $content_node_field);
    
    $content_group_fields = new stdClass();
    $content_group_fields->type_name = 'wally_articlepackage';
    $content_group_fields->group_name = 'group_taxonomy';
    $content_group_fields->field_name = 'field_iptc';
    drupal_write_record('content_group_field', $content_group_fields);
    $content_group_fields->type_name = 'wally_gallerypackage';
    drupal_write_record('content_group_field', $content_group_fields);
    $content_group_fields->type_name = 'wally_pollpackage';
    drupal_write_record('content_group_field', $content_group_fields);
    $content_group_fields->type_name = 'wally_audioobject';
    drupal_write_record('content_group_field', $content_group_fields);
    $content_group_fields->type_name = 'wally_digitalobject';
    drupal_write_record('content_group_field', $content_group_fields);
    $content_group_fields->type_name = 'wally_photoobject';
    drupal_write_record('content_group_field', $content_group_fields);
    $content_group_fields->type_name = 'wally_pollobject';
    drupal_write_record('content_group_field', $content_group_fields);
    $content_group_fields->type_name = 'wally_textobject';
    drupal_write_record('content_group_field', $content_group_fields);
    $content_group_fields->type_name = 'wally_videoobject';
    drupal_write_record('content_group_field', $content_group_fields);
  }
  if (wallytoolbox_taxonomy_getvocabularyvidbyname('Concepts') == NULL){
    $new_voc['name'] = 'Concepts';
    taxonomy_save_vocabulary($new_voc);
  }
  
  //Add IPTC to Package and objects
  $content_node_field = new stdClass();
  $content_node_field->field_name = 'field_iptc';
  $content_node_field->type = 'content_taxonomy';
  $content_node_field->global_settings = 'a:5:{s:14:"save_term_node";i:1;s:3:"vid";s:2:"14";s:6:"parent";s:1:"0";s:15:"parent_php_code";s:0:"";s:5:"depth";s:0:"";}';
  $content_node_field->required = 0;
  $content_node_field->multiple = 1;
  $content_node_field->db_storage = 0;
  $content_node_field->module = 'content_taxonomy';
  $content_node_field->db_columns = 'a:1:{s:5:"value";a:3:{s:4:"type";s:3:"int";s:8:"not null";b:0;s:8:"sortable";b:0;}}';
  $content_node_field->active = 1;
  $content_node_field->locked = 0;
  drupal_write_record('content_node_field', $content_node_field);
  
  return $ret;
  
}