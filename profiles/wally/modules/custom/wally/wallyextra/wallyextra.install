<?php

/*
 * Implementation of the hook module _install();
 */
function wallyextra_install() {
  drupal_install_schema('wallyextra');
  wallyextra_refresh_cache_list();
}

/*
 * Implementation of the hook module _uninstall();
 */
function wallyextra_uninstall() {
  drupal_uninstall_schema('wallyextra');
}

function wallyextra_schema() {
  $schema = array();

  $schema['wallyextra_rssmixread_content'] = array(
    'description' => 'Contains exportable RSS mix reader content for this site.',
    'export' => array(
      'identifier' => 'wallyextra_rssmixread',
      'bulk export' => TRUE,
      'primary key' => 'cid',
      'key'=>'name',
      'default hook' => 'wallyextra_rssmix_content_obj',
      'api' => array(
        'owner' => 'wallyextra',
        'api' => 'wallyextra_rssmix_content',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
//      'create callback' => 'wallyextra_content_type_new',
    ),
    'fields' => array(
      'cid' => array(
        'type' => 'serial',
        'description' => 'A database primary key to ensure uniqueness',
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Unique ID for this content. Used to identify it programmatically.',
      ),
      'admin_title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative title for this content.',
      ),
      'admin_description' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Administrative description for this content.',
        'object default' => '',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative category for this content.',
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized settings for the actual content to be used',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('cid'),
  );
  
  $schema['wallyextra_rssread_content'] = array(
    'description' => 'Contains exportable RSS reader content for this site.',
    'export' => array(
      'identifier' => 'wallyextra_rssread',
      'bulk export' => TRUE,
      'primary key' => 'cid',
      'key'=>'name',
      'api' => array(
        'owner' => 'wallyextra',
        'api' => 'wallyextra_rssread_content',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
 //     'create callback' => 'wallyextra_content_type_new',
    ),
    'fields' => array(
      'cid' => array(
        'type' => 'serial',
        'description' => 'A database primary key to ensure uniqueness',
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Unique ID for this content. Used to identify it programmatically.',
      ),
      'admin_title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative title for this content.',
      ),
      'admin_description' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Administrative description for this content.',
        'object default' => '',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative category for this content.',
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized settings for the actual content to be used',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('cid'),
  );
  
  $schema['wallyextra_taxonomylist_content'] = array(
    'description' => 'Contains exportable taxonomy list content for this site.',
    'export' => array(
      'identifier' => 'wallyextra_taxonomylist',
      'bulk export' => TRUE,
      'primary key' => 'cid',
      'key' => 'name',
  		'key' => 'cid',
  	  'api' => array(
        'owner' => 'wallyextra',
        'api' => 'wallyextra_taxonomylist_content',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
   //   'create callback' => 'wallyextra_content_type_new',
    ),
    'fields' => array(
      'cid' => array(
        'type' => 'serial',
        'description' => 'A database primary key to ensure uniqueness',
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Unique ID for this content. Used to identify it programmatically.',
      ),
      'admin_title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative title for this content.',
      ),
      'admin_description' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Administrative description for this content.',
        'object default' => '',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative category for this content.',
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized settings for the actual content to be used',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('cid'),
  );
  
  $schema['wallyextra_twitread_content'] = array(
    'description' => 'Contains exportable Twitter reader content for this site.',
    'export' => array(
      'identifier' => 'wallyextra_twitreadt',
      'bulk export' => TRUE,
      'primary key' => 'cid',
      'key' => 'name',
  		'api' => array(
        'owner' => 'wallyextra',
        'api' => 'wallyextra_twitread_content',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
//      'create callback' => 'wallyextra_content_type_new',
    ),
    'fields' => array(
      'cid' => array(
        'type' => 'serial',
        'description' => 'A database primary key to ensure uniqueness',
        'not null' => TRUE,
        'no export' => TRUE,  
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Unique ID for this content. Used to identify it programmatically.',
      ),
      'admin_title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative title for this content.',
      ),
      'admin_description' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Administrative description for this content.',
        'object default' => '',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative category for this content.',
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized settings for the actual content to be used',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('cid'),
  );
  
  $schema['wallyextra_remotehtml_content'] = array(
    'description' => 'Contains Remote HTML content for this site.',
    'export' => array(
      'identifier' => 'wallyextra_remotehtml',
      'bulk export' => TRUE,
      'primary key' => 'cid',
      'api' => array(
        'owner' => 'wallyextra',
        'api' => 'wallyextra_remotehtml_content',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
//      'create callback' => 'wallyextra_content_type_new',
    ),
    'fields' => array(
      'cid' => array(
        'type' => 'serial',
        'description' => 'A database primary key to ensure uniqueness',
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Unique ID for this content. Used to identify it programmatically.',
      ),
      'admin_title' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative title for this content.',
      ),
      'admin_description' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Administrative description for this content.',
        'object default' => '',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'Administrative category for this content.',
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized settings for the actual content to be used',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('cid'),
  );
  $schema['wallyextra_cache_torefresh'] = array(
  'description' => 'Contains a list of cached elements to refresh and their settings.',
    'fields' => array(
      'cid' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'A database primary key to ensure uniqueness',
        'not null' => TRUE,
      ),
      'enabled' => array(
      	'type' => 'int',
      	'not null' => TRUE,
      	'default' => 1
      ),
      'weight' => array(
      	'type' => 'int',
      	'not null' => TRUE,
        'default' => 0,
      ),
      'rule' => array(
      	'type' => 'int',
      	'not null' => TRUE,
        'default' => 0,
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized settings for the cached content rendered',
        'serialize' => TRUE,
       // 'object default' => array(),
      ),
      'output' => array(
      	'type' => 'text',
      	'size' => 'big',
      	'not null' => TRUE,
        'default' => '',
      ),
      'last_run' => array(
      	'type' => 'int',
      	'not null' => TRUE,
      	'default' => 0,
      ),
    ),
    'primary key' => array('cid'),
  );
  
  return $schema;
}

function wallyextra_update_6001() {
  $schema['wallyextra_cache_torefresh'] = array(
    'description' => 'Contains a list of cached elements to refresh and their settings.',
    'fields' => array(
      'cid' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'A database primary key to ensure uniqueness',
        'not null' => TRUE,
      ),
      'settings' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Serialized settings for the cached content rendered',
        'serialize' => TRUE,
        'object default' => array(),
      ),
    ),
    'primary key' => array('cid'),
  );
  $ret = array();
  db_create_table($ret, 'wallyextra_cache_torefresh', $schema['wallyextra_cache_torefresh']);
  return $ret;
}

function wallyextra_update_6002() {
  $ret = array();
  
  $fields = array(
    'enabled' => array(
    	'type' => 'int',
    	'not null' => TRUE,
    	'default' => 1
    ),
    'weight' => array(
    	'type' => 'int',
    	'not null' => TRUE,
      'default' => 0,
    ),
    'rule' => array(
    	'type' => 'int',
    	'not null' => TRUE,
      'default' => 0,
    ),
    'output' => array(
    	'type' => 'text',
    	'size' => 'big',
    	'not null' => TRUE,
      'default' => '',
    ),
    'last_run' => array(
    	'type' => 'int',
    	'not null' => TRUE,
    	'default' => 0,
    ),
  );
  
  foreach ($fields as $field => $spec)
    db_add_field($ret, 'wallyextra_cache_torefresh', $field, $spec);
  
  wallyextra_refresh_cache_list();
  
  return $ret;
}
