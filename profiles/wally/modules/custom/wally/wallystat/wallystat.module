<?php 

/**
 * Implementation of hook_menu()
 */
function wallystat_menu() {
  $items = array();
  
  $items['admin/wally/wallystat/settings'] = array(
    'title' => 'Wally Statistics Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wallystat_page_admin_form'),
    'access arguments' => array('access administration pages'),
    'description' => 'Allows administrators to set paramaters for this module to function properly.',
    'file' => 'includes/wallystat.admin.inc',
  );
  
  $items['wallystat/showstats'] = array(
    'page callback' => 'wallystat_show_stats',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implementation of hook_theme()
 */
function wallystat_theme() {
 return array(
    'wallystat_show_stats_48h' => array(
      'arguments' => array(),
      'template' => 'wallystat-show-stats-48h',
      'preprocess functions' => array(),
      'path' => drupal_get_path('module', 'wallystat') . '/templates',
    ),
    
    'wallystat_show_stats_param' => array(
      'arguments' => array('param_i' => 0, 'params_callback' => array()),
      'template' => 'wallystat-show-stats-param',
      'preprocess functions' => array(),
      'path' => drupal_get_path('module', 'wallystat') . '/templates',
    ),
  );
}

/**
 * Implemenation of hook_block()
 */
function wallystat_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks['show_stats'] = array(
        'info' => t('Stats lightbox'),
        'cache' => BLOCK_CACHE_PER_PAGE,
      );
      return $blocks;
    case 'configure':
      $form = array();
      return $form;
    case 'save':
      break;
    case 'view':
      switch ($delta) {
        case 'show_stats':
          $block = array(
            'subject' => t(''), 
            'content' => _wallystat_get_stats_block_content(),
          );
          break;
      }
      return $block;
  }
}

/**
 * Implementation of hook_cron()
 */
function wallystat_cron(){

	$current_tstamp = time() - date('i')*60 - date('s');
  echo('Started : '.date('Y-m-d H:i:s').'<br/>');
  
  $last_tstamp = db_result(db_query_range("SELECT timestamp FROM {wallystat_node_counter} ORDER BY timestamp DESC", 0, 1));
  if($placeholder = _wallystat_get_placeholder($last_tstamp, $current_tstamp)){
    db_query('UPDATE {wallystat_node_counter} SET '.$placeholder);
    echo($placeholder.' for wallystat_node_counter <br/>');
  }
  
  $last_tstamp = db_result(db_query_range("SELECT timestamp FROM {wallystat_term_counter} ORDER BY timestamp DESC", 0, 1));
  if($placeholder = _wallystat_get_placeholder($last_tstamp, $current_tstamp)){
    db_query('UPDATE {wallystat_term_counter} SET '.$placeholder);
    echo($placeholder.' for wallystat_term_counter <br/>');
  }
  
  $query = "SELECT terms, count(*) as term_count FROM {wallystat_tempdata} WHERE timestamp < ".$current_tstamp." GROUP BY terms";
  $result = db_query($query);
  $term_counts = array();
  while ($row = db_fetch_object($result)){
    $term_array = explode(' ', $row->terms);
    if(is_array($term_array)){
      foreach($term_array as $term){
        $term_counts[$term] += $row->term_count;
      }
    }
  }
  
  foreach($term_counts as $tid=>$term_count){
    db_query("UPDATE {wallystat_term_counter} SET daycount = daycount + %d, weekcount = weekcount + %d, monthcount = monthcount + %d, yearcount = yearcount + %d, totalcount = totalcount + %d, timestamp = %d WHERE tid = %d",
              $term_count, $term_count, $term_count, $term_count, $term_count, $current_tstamp, $tid);
    if (!db_affected_rows()) {//si l'update n'a rien affecté, on insert un nouveau record
			db_query("INSERT INTO {wallystat_term_counter} (tid, daycount, weekcount, monthcount, yearcount, totalcount, timestamp) VALUES (%d, %d, %d, %d, %d, %d, %d)",
                $tid, $term_count, $term_count, $term_count, $term_count, $term_count, $current_tstamp);
		}
  }
  
  $last_tstamp = db_result(db_query("SELECT MIN(timestamp) FROM {wallystat_tempdata}"));
  while($last_tstamp!= FALSE && $last_tstamp < $current_tstamp){
    $truncated_tstmp_start = $last_tstamp - (date('i', $last_tstamp)*60+date('s', $last_tstamp));
    $truncated_tstmp_end = ($current_tstamp>$truncated_tstmp_start+60*60) ? $truncated_tstmp_start-1+60*60 : $current_tstamp-1;
    $query = "SELECT nid, title, param01, param02, param03, param04, param05, param06, param07, param08, param09, param10, count(*) as node_count FROM {wallystat_tempdata} 
              WHERE timestamp BETWEEN %d AND %d 
              GROUP BY nid, param01, param02, param03, param04, param05, param06, param07, param08, param09, param10";
    $result = db_query($query, $truncated_tstmp_start, $truncated_tstmp_end);
    while ($row = db_fetch_array($result)){
      db_query("UPDATE {wallystat_node_counter} SET daycount = daycount + %d, weekcount = weekcount + %d, monthcount = monthcount + %d, yearcount = yearcount + %d, totalcount = totalcount + %d, timestamp = %d, title = '%s' 
                WHERE nid = %d AND param01 = '%s' AND param02 = '%s' AND param03 = '%s' AND param04 = '%s' AND param05 = '%s' AND param06 = '%s' AND param07 = '%s' AND param08 = '%s' AND param09 = '%s' AND param10 = '%s'", 
                $row['node_count'], $row['node_count'], $row['node_count'], $row['node_count'], $row['node_count'], $current_tstamp, $row['title'], $row['nid'], $row['param01'], $row['param02'], $row['param03'], $row['param04'], $row['param05'], $row['param06'], $row['param07'], $row['param08'], $row['param09'], $row['param10']);
      if (!db_affected_rows()) {//si l'update n'a rien affecté, on insert un nouveau record
        db_query("INSERT INTO {wallystat_node_counter} (nid, title, daycount, weekcount, monthcount, yearcount, totalcount, timestamp, param01, param02, param03, param04, param05, param06, param07, param08, param09, param10) 
                  VALUES (%d, '%s', %d, %d, %d, %d, %d, %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')", 
                  $row['nid'], $row['title'], $row['node_count'], $row['node_count'], $row['node_count'], $row['node_count'], $row['node_count'], $current_tstamp, $row['param01'], $row['param02'], $row['param03'], $row['param04'], $row['param05'], $row['param06'], $row['param07'], $row['param08'], $row['param09'], $row['param10']);
      }
      db_query("UPDATE {wallystat_node_hourly_counter} SET count = count + %d, title = '%s'
                  WHERE nid = %d AND timestamp = %d AND param01 = '%s' AND param02 = '%s' AND param03 = '%s' AND param04 = '%s' AND param05 = '%s' AND param06 = '%s' AND param07 = '%s' AND param08 = '%s' AND param09 = '%s' AND param10 = '%s'",
                  $row['node_count'], $row['title'], $row['nid'], $truncated_tstmp_start, $row['param01'], $row['param02'], $row['param03'], $row['param04'], $row['param05'], $row['param06'], $row['param07'], $row['param08'], $row['param09'], $row['param10']);
        if (!db_affected_rows()) {//si l'update n'a rien affecté, on insert un nouveau record
          db_query("INSERT INTO {wallystat_node_hourly_counter} (nid, title, timestamp, count, param01, param02, param03, param04, param05, param06, param07, param08, param09, param10)
                    VALUES (%d, '%s', %d, %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')",
                    $row['nid'], $row['title'], $truncated_tstmp_start, $row['node_count'], $row['param01'], $row['param02'], $row['param03'], $row['param04'], $row['param05'], $row['param06'], $row['param07'], $row['param08'], $row['param09'], $row['param10']);
        }
    }
    db_query("DELETE FROM {wallystat_tempdata} WHERE timestamp <= %d", $truncated_tstmp_end);
    $last_tstamp = db_result(db_query("SELECT MIN(timestamp) FROM {wallystat_tempdata}"));
  }
	
  /*
	while ($row = db_fetch_object($result)){
    
    $node_counts[$row->nid]['count'][$row->params][$truncated_tstmp] += 1;
    $node_counts[$row->nid]['title'] = $row->title;
    $term_array = explode(' ', $row->terms);
    if(is_array($term_array)){
      foreach($term_array as $term){
        $term_counts[$term] += 1;
      }
    }
  
		//echo $row->nid." - ".$row->terms."<br/>";	
		//db_query('UPDATE {wallystat_node_counter} SET daycount = daycount + '.$row->nodecount.', totalcount = totalcount + '.$row->nodecount.', timestamp = '.$current_tstamp.' WHERE nid = '.$row->nid);
		//if (!db_affected_rows()) {//si l'update n'a rien affecté, on insert un nouveau record
		//	db_query('INSERT INTO {wallystat_node_counter} (nid, daycount, totalcount, timestamp) VALUES ('.$row->nid.', '.$row->nodecount.', '.$row->nodecount.', '.$current_tstamp.')');
		//}
	}
  $total_view_processed = 0;
	foreach($node_counts as $nid=>$node_count){

    foreach($node_count['count'] as $params=>$tstamp_count){
      $params_array = unserialize($params);
      foreach($params_array as &$value){
        $value = rawurldecode($value);
      }
      $node_count_tmp = array_sum($tstamp_count);
      //db_query('UPDATE {wallystat_node_counter} SET daycount = daycount + '.$node_count_tmp.', weekcount = weekcount + '.$node_count_tmp.', monthcount = monthcount + '.$node_count_tmp.', yearcount = yearcount + '.$node_count_tmp.', totalcount = totalcount + '.$node_count_tmp.', timestamp = '.$current_tstamp.', title =  WHERE nid = '.$nid);
      db_query("UPDATE {wallystat_node_counter} SET daycount = daycount + %d, weekcount = weekcount + %d, monthcount = monthcount + %d, yearcount = yearcount + %d, totalcount = totalcount + %d, timestamp = %d, title = '%s' 
                WHERE nid = %d AND param01 = '%s' AND param02 = '%s' AND param03 = '%s' AND param04 = '%s' AND param05 = '%s' AND param06 = '%s' AND param07 = '%s' AND param08 = '%s' AND param09 = '%s' AND param10 = '%s'", 
                $node_count_tmp, $node_count_tmp, $node_count_tmp, $node_count_tmp, $node_count_tmp, $current_tstamp, $node_count['title'], $nid, $params_array[0], $params_array[1], $params_array[2], $params_array[3], $params_array[4], $params_array[5], $params_array[6], $params_array[7], $params_array[8], $params_array[9]);
      if (!db_affected_rows()) {//si l'update n'a rien affecté, on insert un nouveau record
        //db_query('INSERT INTO {wallystat_node_counter} (nid, daycount, weekcount, monthcount, yearcount, totalcount, timestamp) VALUES ('.$nid.', '.$node_count_tmp.', '.$node_count_tmp.', '.$node_count_tmp.', '.$node_count_tmp.', '.$node_count_tmp.', '.$current_tstamp.')');
        db_query("INSERT INTO {wallystat_node_counter} (nid, title, daycount, weekcount, monthcount, yearcount, totalcount, timestamp, param01, param02, param03, param04, param05, param06, param07, param08, param09, param10) 
                  VALUES (%d, '%s', %d, %d, %d, %d, %d, %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')", 
                  $nid, $node_count['title'], $node_count_tmp, $node_count_tmp, $node_count_tmp, $node_count_tmp, $node_count_tmp, $current_tstamp, $params_array[0], $params_array[1], $params_array[2], $params_array[3], $params_array[4], $params_array[5], $params_array[6], $params_array[7], $params_array[8], $params_array[9]);
      }
      $total_view_processed += $node_count_tmp;
      foreach($tstamp_count as $hourtstmp=>$hourly_count){
        //db_query('UPDATE {wallystat_node_hourly_counter} SET count = count + '.$hourly_count.' WHERE nid = '.$nid.' AND timestamp = '.$hourtstmp);
        db_query("UPDATE {wallystat_node_hourly_counter} SET count = count + %d, title = '%s'
                  WHERE nid = %d AND timestamp = %d AND param01 = '%s' AND param02 = '%s' AND param03 = '%s' AND param04 = '%s' AND param05 = '%s' AND param06 = '%s' AND param07 = '%s' AND param08 = '%s' AND param09 = '%s' AND param10 = '%s'",
                  $hourly_count, $node_count['title'], $nid, $hourtstmp, $params_array[0], $params_array[1], $params_array[2], $params_array[3], $params_array[4], $params_array[5], $params_array[6], $params_array[7], $params_array[8], $params_array[9]);
        if (!db_affected_rows()) {//si l'update n'a rien affecté, on insert un nouveau record
          //db_query('INSERT INTO {wallystat_node_hourly_counter} (nid, timestamp, count) VALUES ('.$nid.', '.$hourtstmp.', '.$hourly_count.')');
          db_query("INSERT INTO {wallystat_node_hourly_counter} (nid, title, timestamp, count, param01, param02, param03, param04, param05, param06, param07, param08, param09, param10)
                    VALUES (%d, '%s', %d, %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')",
                    $nid, $node_count['title'], $hourtstmp, $hourly_count, $params_array[0], $params_array[1], $params_array[2], $params_array[3], $params_array[4], $params_array[5], $params_array[6], $params_array[7], $params_array[8], $params_array[9]);
        }
      }
    }
  }
  echo(count($node_counts).' nodes processed for a total of '.$total_view_processed.' views <br/>');
  
  foreach($term_counts as $tid=>$term_count){
    db_query('UPDATE {wallystat_term_counter} SET daycount = daycount + '.$term_count.', weekcount = weekcount + '.$term_count.', monthcount = monthcount + '.$term_count.', yearcount = yearcount + '.$term_count.', totalcount = totalcount + '.$term_count.', timestamp = '.$current_tstamp.' WHERE tid = '.$tid);
    if (!db_affected_rows()) {//si l'update n'a rien affecté, on insert un nouveau record
			db_query('INSERT INTO {wallystat_term_counter} (tid, daycount, weekcount, monthcount, yearcount, totalcount, timestamp) VALUES ('.$tid.', '.$term_count.', '.$term_count.', '.$term_count.', '.$term_count.', '.$term_count.', '.$current_tstamp.')');
		}
  }
  echo(count($term_counts).' terms processed for a total of '.array_sum($term_counts).' views <br/>');
  */
  
  // Time limit of 48h
  $limit_tstamp = $current_tstamp - 48*60*60;
  $query = "DELETE FROM {wallystat_node_hourly_counter} WHERE timestamp < ".$limit_tstamp;
	db_query($query);
  
  echo('Finished : '.date('Y-m-d H:i:s', time()).'<br/>');
}

/**
 * Implementation of hook_preprocess_page().
 */
function wallystat_preprocess_page(&$vars) {
	if(isset($vars['node'])) {
	  _wallystat_add_updater_callback($vars);
	}
}

/**
 * Implementation of hook_views_api().
 */
function wallystat_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'wallystat') .'/views',
  );
}

/**
 * Return the HTML of the stats for a node
 */
function wallystat_show_stats() {
  $last_48h = theme('wallystat_show_stats_48h');
  $params = array();
  for ($i=1; $i<=10; $i++) {
    if ($params_callback = variable_get('wallystat_param_'.$i, FALSE))
      $params[] = theme('wallystat_show_stats_param', $i, $params_callback);
  }
  
  print $last_48h.implode('', $params);
}

/**
 * Return the list of all available functions which return a statistic's parameter.
 */
function wallystat_available_params_function() {
  return array(
    'wallystat_get_url_argument' => 'One of the URL arguments',
    'wallystat_get_node_field' => 'The value of one of the node fields',
  );
}

/**
 * Return an URL argument
 */
function wallystat_get_url_argument($node, $i) {
  return arg($i);
}

/**
 * Return the form element(s) for this callback
 */
function wallystat_get_url_argument_form() {
  $form = array();
  
  $form[] = array(
    '#type' => 'select',
    '#title' => t('Argument ID in URL'),
    '#options' => array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
  );
  
  return $form;
}

/**
 * Return the value of a node field
 */
function wallystat_get_node_field($node, $field) {
  $node_field = isset($node->$field) ? $node->$field : NULL;
  return isset($node_field) ? $node_field[0]['value'] : '';
}

/**
 * Return the form element(s) for this callback
 */
function wallystat_get_node_field_form() {
  $form = array();
  
  $form[] = array(
    '#type' => 'textfield',
    '#title' => t('Field name'),
    '#size' => 80,
    '#maxlength' => 512,
  );
  
  return $form;
}

/**
 * Interal function to get the placeholder to put in the query
 * reseting some of the count fields depending on the difference of 
 * time between two timestamps
 */
function _wallystat_get_placeholder($last_tstamp, $current_tstamp){
  if(!is_numeric($last_tstamp) || !is_numeric($current_tstamp))
    return FALSE;
  
  $placeholder = array();
  if(date('z' ,$current_tstamp) != date('z' ,$last_tstamp))
    $placeholder[] = 'daycount = 0';
  
  if(date('W' ,$current_tstamp) != date('W' ,$last_tstamp))
    $placeholder[] = 'weekcount = 0';
  
  if(date('m' ,$current_tstamp) != date('m' ,$last_tstamp))
    $placeholder[] = 'monthcount = 0';
  
  if(date('Y' ,$current_tstamp) != date('Y' ,$last_tstamp))
    $placeholder[] = 'yearcount = 0';
  
  if(!empty($placeholder)){
    return implode(', ',$placeholder);
  }else{
    return FALSE;
  }
}

/**
 * Add the stat AJAX updater callback to node pages
 */
function _wallystat_add_updater_callback(&$vars) {
  $current_id = $vars['node']->nid;
  $title = $vars['node']->title;
  $current_terms = '';
  if(isset($vars['node']->field_destinations) && is_array($vars['node']->field_destinations)){
    foreach($vars['node']->field_destinations as $dest)
      $current_terms .= $dest['tid'].'+';
  }
  $query = "SELECT tid FROM {term_node} WHERE nid = ".$current_id;
  $result = db_query($query);
  while ($row = db_fetch_array($result))
    $current_terms .= $row['tid'].'+';

  $params_array = array();
  for ($i=1; $i<=10; $i++) {
    $params_callback = variable_get('wallystat_param_'.$i, array());
    $current_callback = isset($params_callback['current_callback']) ? $params_callback['current_callback'] : 'none';

    unset($params_callback[$current_callback]['name']);
    if ($current_callback != 'none') {
      $param_value = call_user_func_array($current_callback, array($vars['node']) + $params_callback[$current_callback]);
      $param_value = rawurldecode($param_value);
      $params_array[] = ($i == 10) ? 'param'.$i.'='.$param_value : 'param0'.$i.'='.$param_value;
    } else {
      $params_array[] = ($i == 10) ? 'param'.$i.'=' : 'param0'.$i.'=';
    }
  }

  $current_terms = trim($current_terms, '+');
  drupal_add_js("$(document).ready(function(){
    									updateStats();
									});
									
									function updateStats(){
										$.ajax({
                						      url: \""."/".drupal_get_path('module', 'wallystat')."/updater.php?nid=".$current_id."&title=".$title."&terms=".$current_terms."&".implode('&', $params_array)."\",
                						      cache: false,
                						      async: false
                						    })
									}
									", "inline");
}

/**
 * Get content for the stat block
 */
function _wallystat_get_stats_block_content() {
  drupal_add_js('
    $(document).ready(function(){
      $("div.outerwrap div.wrapper").before("<div id=\'follower\' style=\'z-index:999\'></div>");
      $("#follower").hide();
      
      $("div.content").mousemove(function(e){
        var nodelink = $(this).find("h2 a");
        updateFollower($(nodelink).attr("href"));
        $("#follower").show();
        $("#follower").css({
          position: "absolute",
          display: "block",
          top: e.pageY + "px",
          left: e.pageX + "px"
        });
      });
      
      $("div.content").mouseout(function(e){
        $("#follower").hide();
      });
    });
    
    function updateFollower(hrefvalue){
      $.ajax({url: "/wallystat/showstats?hrefvalue="+encodeURIComponent(hrefvalue), cache: false, async: false, complete: function(data) {
        $("#follower").html(data.responseText);
      }});
    }
  ', 'inline');
  
  return '';
}
