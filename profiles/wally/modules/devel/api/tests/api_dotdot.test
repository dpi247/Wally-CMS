<?php

/**
 * @file
 * Tests that files in .. directories work in the API module.
 */

include_once './'. drupal_get_path('module', 'api') .'/tests/api_test_case.php';

/**
 * Tests that files in .. directories are scanned.
 */
class ApiDotDotTestCase extends ApiTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Dot dot directories',
      'description' => 'Tests that the API module can parse files in .. directories',
      'group' => 'API Module',
    );
  }

  function setUp() {
    $this->baseSetUp();

    // Make a branch for sample code, using a .. in the path.
    $base = getcwd();
    $parts = explode('/', $base);
    $last = array_pop($parts);
    $prefix = '../' . $last . '/';

    $this->setUpBranchAPICall($prefix);

    $this->resetBranchesAndCache();
    api_update_all_branches();

    $count = $this->processApiParseQueue();
    $this->assertEqual($count, 10, "10 files were parsed ($count)");
  }

  /**
   * Tests that all the files were parsed.
   */
  function testParsing() {
    // Make sure we have the right number of doc objects.
    $branch = $this->getBranch();
    $count = db_result(db_query("SELECT count(*) FROM {api_documentation} WHERE branch_id = %d", $branch->branch_id));
    $this->assertEqual($count, 65, 'Found ' . $count . ' documentation objects.');

    // Verify that the top-level directory was parsed.

    $object = api_filename_load('sample.php', $branch->project, $branch->branch_name);
    $this->assertTrue(isset($object) && $object, 'sample.php was found (top level)');

    $object = api_object_load('sample_function', $branch, 'function');
    $this->assertTrue(isset($object) && $object, 'sample_function was found (top level)');

    // Verify that the subdirectory was parsed.

    $object = api_filename_load('subdirectory/sample-subdir.php', $branch->project, $branch->branch_name);
    $this->assertTrue(isset($object) && $object, 'sample_insubdir.php was found (sub-directory)');

    $object = api_object_load('sample_insubdir_function', $branch, 'function');
    $this->assertTrue(isset($object) && $object, 'sample_insubdir_function was found (sub-directory)');
  }
}
