<?php

/**
 * @file
 * Tests for valid and invalid URLs (paths) for the API module.
 */

include_once './'. drupal_get_path('module', 'api') .'/tests/api_test_case.php';

/**
 * Tests URLs to make sure they are handled correctly.
 *
 * Tests all valid URL patterns for the API module. See
 * http://drupal.org/node/829662#comment-3120966 for a list of URL patterns
 * up to API 6-x-1.2. In 6.x-1.6, the file name component of URLs changed to
 * use ! as a directory separator instead of --, so that files with -- in the
 * name could be supported.
 *
 * @todo Need test for api/function_dump/%
 */
class ApiURLPatternsTest extends ApiTestCase {

  static function getInfo() {
    return array(
      'name' => 'URL functioning',
      'description' => 'Test URLs specified in api_menu(), both old and current.',
      'group' => 'API Module',
    );
  }

  /**
   * Ensures that valid URL patterns are successful.
   *
   * Loads an example of each valid URL pattern. Verifies that it loads
   * successfully by checking for a 200 response code and expected text.
   */
  function testApiUrlPaths() {

    // Check listing pages.
    $project_name = 'test';
    $branch_name = '6';

    $tests = array(
      array(
        'url' => 'api/' . $project_name,
        'aliases' => array('api'),
        'text' => array('A sample group.', 'A sample group of classes'),
        'links' => array(t('Topics'), t('Files')),
      ),
      array(
        'url' => 'api/' . $project_name . '/' . $branch_name,
        'aliases' => array('api/' . $branch_name),
        'text' => array('A sample group.', 'A sample group of classes'),
        'links' => array(t('Topics'), t('Files')),
      ),
      array(
        'url' => 'api/' . $project_name . '/classes',
        'text' => array(t('Classes'), t('Interfaces'), 'Sample class', 'Sample interface'),
        'links' => array('Sample', 'SampleInterface'),
      ),
      array(
        'url' => 'api/' . $project_name . '/classes/' . $branch_name,
        'text' => array(t('Classes'), t('Interfaces'), 'Sample class', 'Sample interface', 'subdirectory'),
        'links' => array('Sample', 'SampleInterface', 'classes.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/constants',
        'aliases' => array('api/constants'),
        'text' => array('A sample constant', 'subdirectory'),
        'links' => array('SAMPLE_CONSTANT', 'sample-subdir.php', 'sample.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/constants/' . $branch_name,
        'aliases' => array('api/constants/' . $branch_name),
        'text' => array('A sample constant', 'subdirectory'),
        'links' => array('SAMPLE_CONSTANT', 'sample-subdir.php', 'sample.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/files',
        'aliases' => array('api/files'),
        'text' => array('A sample file'),
        'links' => array('sample.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/files/' . $branch_name,
        'aliases' => array('api/files/' . $branch_name),
        'text' => array('A sample file'),
        'links' => array('sample.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/functions',
        'aliases' => array('api/functions'),
        'text' => array('A sample function', 'subdirectory'),
        'links' => array('sample_function', 'sample.php', 'sample-subdir.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/functions/' . $branch_name,
        'aliases' => array('api/functions/' . $branch_name),
        'text' => array('A sample function', 'subdirectory'),
        'links' => array('sample_function', 'sample.php', 'sample-subdir.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/globals',
        'aliases' => array('api/globals'),
        'text' => array('A sample global', 'subdirectory'),
        'links' => array('$sample_global', 'sample.php', 'sample-subdir.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/globals/' . $branch_name,
        'aliases' => array('api/globals/' . $branch_name),
        'text' => array('A sample global', 'subdirectory'),
        'links' => array('$sample_global', 'sample.php', 'sample-subdir.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/groups',
        'aliases' => array('api/groups'),
        'text' => array('A sample group'),
        'links' => array('Samples'),
      ),
      array(
        'url' => 'api/' . $project_name . '/groups/' . $branch_name,
        'aliases' => array('api/groups/' . $branch_name),
        'text' => array('A sample group'),
        'links' => array('Samples'),
      ),

      // Check individual documentation items.
      array(
        'url' => 'api/' . $project_name . '/subdirectory!classes-subdir.php/class/SampleInSubDir/' . $branch_name,
        'aliases' => array('api/' . $project_name . '/subdirectory--classes-subdir.php/class/SampleInSubDir/' . $branch_name),
        'text' => array('implements', 'A public property for testing', 'Sample class in a subdirectory', 'SampleInSubDir', 'Only implemented in children', 'A class constant in a subdirectory', 'subdirectory/', 'Classes in a subdirectory test', 'A sample group of classes.'),
        'links' => array('SampleInterface', 'SubInSubDirSample', 'SampleInSubDir::$property_in_sub_dir', 'SampleInSubDir::baz', 'SampleInSubDir::constant', 'classes-subdir.php', 'Class Samples'),
      ),
      array(
        'url' => 'api/' . $project_name . '/subdirectory!sample-subdir.php/constant/SAMPLE_CONSTANT_IN_SUB_DIR/' . $branch_name,
        'aliases' => array(
          'api/constant/SAMPLE_CONSTANT_IN_SUB_DIR/' . $branch_name,
          'api/constant/SAMPLE_CONSTANT_IN_SUB_DIR',
          'api/' . $project_name . '/subdirectory--sample-subdir.php/constant/SAMPLE_CONSTANT_IN_SUB_DIR/' . $branch_name,
        ),
        'text' => array('SAMPLE_CONSTANT_IN_SUB_DIR', 'A sample constant', 'subdirectory/', 'A sample file in a subdirectory', 'A sample group'),
        'links' => array('sample-subdir.php', 'Samples'),
      ),
      array(
        'url' => 'api/' . $project_name . '/subdirectory!sample-subdir.php/' . $branch_name,
        'aliases' => array(
          'api/' . $project_name . '/subdirectory--sample-subdir.php/' . $branch_name,
          'api/file/subdirectory/sample-subdir.php',
          'api/file/subdirectory/sample-subdir.php/' . $branch_name,
        ),
        'text' => array('A sample file in a subdirectory', 'sample-subdir.php', 'A sample global in a subdirectory'),
        'links' => array('$sample_in_sub_dir_global'),
      ),
      array(
        'url' => 'api/' . $project_name . '/sample--doubledash.tpl.php/' . $branch_name,
        'text' => array('Displays a sample with a doubledash.', 'This is for testing that files with'),
      ),
      array(
        'url' => 'api/' . $project_name . '/subdirectory!sample-subdir.php/function/sample_insubdir_function/' . $branch_name,
        'aliases' => array(
          'api/function/sample_insubdir_function/' . $branch_name,
          'api/function/sample_insubdir_function/',
          'api/' . $project_name . '/subdirectory--sample-subdir.php/function/sample_insubdir_function/' . $branch_name,
        ),
        'text' => array('Used for sample and testing URLs', 'Another sample function; in a sub-directory'),
        'links' => array('sample_function', 'Samples', 'sample-subdir.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/subdirectory!sample-subdir.php/global/sample_in_sub_dir_global/' . $branch_name,
        'aliases' => array(
          'api/global/sample_in_sub_dir_global/' . $branch_name,
          'api/global/sample_in_sub_dir_global',
          'api/' . $project_name . '/subdirectory--sample-subdir.php/global/sample_in_sub_dir_global/' . $branch_name,
        ),
        'text' => array('$sample_in_sub_dir_global', 'A sample global in a subdirectory', 'subdirectory/', 'A sample file in a subdirectory', 'A sample group.'),
        'links' => array('sample-subdir.php', 'Samples'),
      ),
      array(
        'url' => 'api/' . $project_name . '/subdirectory!classes-subdir.php/interface/SampleInSubDirInterface/' . $branch_name,
        'aliases' => array('api/' . $project_name . '/subdirectory--classes-subdir.php/interface/SampleInSubDirInterface/' . $branch_name),
        'text' => array('SampleInSubDirInterface', 'Sample interface in a subdirectory', 'Implements this API'),
        'links' => array('Sample2InSubDir', 'SampleInSubDirInterface::foo2', 'classes-subdir.php', 'Class Samples'),
      ),
      array(
        'url' => 'api/' . $project_name . '/subdirectory!classes-subdir.php/property/SampleInSubDir::protected_property_in_sub_dir/' . $branch_name,
        'aliases' => array('api/' . $project_name . '/subdirectory--classes-subdir.php/property/SampleInSubDir::protected_property_in_sub_dir/' . $branch_name),
        'text' => array('SampleInSubDir::$protected_property_in_sub_dir', 'A protected property for testing', 'Classes in a subdirectory test'),
        'links' => array('classes-subdir.php'),
      ),
      array(
        'url' => 'api/' . $project_name . '/sample.php/group/samp_GRP-6.x/' . $branch_name,
        'aliases' => array(
          'api/group/samp_GRP-6.x/' . $branch_name,
          'api/group/samp_GRP-6.x',
        ),
        'text' => array('A sample group', 'A sample function'),
        'links' => array('sample_function', 'sample.php'),
      ),

      // Check search page.
      array(
        'url' => 'api/search/' . $branch_name . '/duplicate',
        'text' => array('For testing duplicate function name linking'),
        'links' => array('DUPLICATE_CONSTANT', 'duplicates.php', 'duplicate_function'),
      ),
      array(
        'url' => 'api/search/' . $branch_name . '/foo',
        'text' => array('Implements', 'Metasyntatic member function', 'Implements this API', 'Implements foo2.', 'A property that matches', 'Overrides parent function'),
        'links' => array('foo_sample_name', 'sample.php', 'Sample::foo', 'SampleInterface::foo', 'classes.php', 'SampleInSubDir::$foo', 'SampleInSubDir::foo', 'SampleInSubDirInterface::foo2', 'SubInSubDirSample::foo', 'Sample2InSubDir::foo2', 'classes-subdir.php'),
      ),

      // Check menu callbacks.
      array(
        'url' => 'api/opensearch/' . $branch_name,
        'text' => array('Drupal API', $branch_name, 'API documentation'),
      ),
      array(
        'url' => 'api/suggest/' . $branch_name . '/duplicate',
        'text' => array('duplicate', 'duplicates.php', 'duplicate_function', 'DUPLICATE_CONSTANT'),
      ),
      array(
        'url' => 'api/autocomplete/' . $branch_name,
        'text' => array('duplicate', 'duplicates.php', 'duplicate_function', 'DUPLICATE_CONSTANT', 'Sample', 'Samples', 'Sample::baz', '$sample_global', 'SampleInterface', 'Sample::$property', 'SubInSubDirSample', 'Sample::foo', 'SampleInSubDir::foo', 'Sample2InSubDir::foo2', 'SubInSubDirSample::foo'),
      ),
      array(
        'url' => 'api/function_dump/' . $branch_name,
        'text' => array('sample_function($parameter, $complex_parameter) ### A sample function.'),
      ),

      // Check pages that should not exist.
      array(
        'url' => 'api/foobar',
        'response' => '404',
      ),
      array(
        'url' => 'api/foobar/functions',
        'response' => '404',
      ),
      array(
        'url' => 'api/' . $project_name . '/sample.php/function/not_real_name/' . $branch_name,
        'response' => '404',
      ),
      array(
        'url' => 'api/' . $project_name . '/sample.php/class/not_real_name/' . $branch_name,
        'response' => '404',
      ),
      array(
        'url' => 'api/' . $project_name . '/sample.php/global/not_real_name/' . $branch_name,
        'response' => '404',
      ),
      array(
        'url' => 'api/' . $project_name . '/sample.php/interface/not_real_name/' . $branch_name,
        'response' => '404',
      ),
      array(
        'url' => 'api/' . $project_name . '/sample.php/constant/not_real_name/' . $branch_name,
        'response' => '404',
      ),
      array(
        'url' => 'api/' . $project_name . '/sample.php/property/not_real_name/' . $branch_name,
        'response' => '404',
      ),
      array(
        'url' => 'api/' . $project_name . '/not_real_file_name/' . $branch_name,
        'response' => '404',
      ),
    );

    foreach ($tests as $test) {
      // Verify the HTTP response is expected.
      $this->drupalGet($test['url']);
      $response = isset($test['response']) ? $test['response'] : 200;
      $this->assertResponse($response, $test['url'] . ' got expected HTTP response');

      // Verify the expected text is on the page.
      if (isset($test['text'])) {
        foreach ($test['text'] as $text) {
          $this->assertText($text);
        }
      }

      // Verify the expected links are on the page.
      if (isset($test['links'])) {
        foreach ($test['links'] as $text) {
          $this->assertLink($text);
        }
      }

      // Verify that aliases from prior versions redirect to here correctly.
      if (isset($test['aliases'])) {
        $url = $this->url;
        foreach ($test['aliases'] as $alias) {
          $this->drupalGet($alias);
          $this->assertEqual($url, $this->url, 'Alias was redirected');
        }
      }
    }
  }
}
