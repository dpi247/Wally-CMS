<?php

/**
 * @file
 * Integrates Apache Solr Search with Panels.
 *
 * Authors:
 *   Joakim Stai (ximo) <http://drupal.org/user/88701)
 *   Kevin Bridges (cyberswat) <http://drupal.org/user/27802>
 */

/**
 * Implementation of hook_ctools_plugin_directory().
 */
function spapachesolr_panels_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * ImplÃ©mentation du hook theme
 */
function spapachesolr_panels_theme(&$var) {
  $path = drupal_get_path('module', 'spapachesolr_panels');
  $base = array(
    'path' => "$path/templates/spapachesolr",
  );
	
  return array(
  
    'spapachesolr_panels_gresult_home_first' => $base + array(
    'arguments' => array('results' => array()),
    'template' => 'spapachesolr_panels_gresult_home_first',
    'preprocess functions' => array(),
	   ),

    'spapachesolr_panels_gresult_home_other' => $base + array(
    'arguments' => array('results' => array()),
    'template' => 'spapachesolr_panels_gresult_home_other',
    'preprocess functions' => array(),
	   ),
	   
    'spapachesolr_panels_gresult_home_photos' => $base + array(
    'arguments' => array('results' => array()),
    'template' => 'spapachesolr_panels_gresult_home_photos',
    'preprocess functions' => array(),
	   ),
	   
    'spapachesolr_panels_gresult_home_videos' => $base + array(
    'arguments' => array('results' => array()),
    'template' => 'spapachesolr_panels_gresult_home_videos',
    'preprocess functions' => array(),
	   ),
	   
	 );
}

/**
 * Execute a Solr search.
 *
 * Using hook_search() would make this module a first-class search module
 * alongside Apache Solr Search, which we don't want. Instead, we execute the
 * search directly and imitate what the core Search module does.
 *
 * @see search_data()
 */
function spapachesolr_panels_search_execute($search) {
	
  // Store information about the search for use in other panes.
  apachesolr_panels_static_search_cache($search);

  $results = NULL;
  try {
    $results = apachesolr_search_execute($search['keys'], $search['filters'], $search['sort'], $search['path'], $search['page']);
  }
  catch (Exception $e) {
    watchdog('Apache Solr', nl2br(check_plain($e->getMessage())), NULL, WATCHDOG_ERROR);
    apachesolr_failure(t('Solr search'), $search['keys']);
  }
  
  dsm("passe une ligne");
  dsm("passe une ligne");
  dsm("passe une ligne");
  dsm("passe une ligne");
  dsm("passe une ligne");
  dsm($search); 
	dsm($results);
    
  // Imitate search_data() to present the results as Apache Solr Search would.
  if (is_array($results) && count($results)) {
    if (module_hook('apachesolr_search', 'search_page')) {
      return module_invoke('apachesolr_search', 'search_page', $results);
    }
    else {
      return theme('search_results', $results, 'apachesolr_search');
    }
  }
}

/**
 * Store/fetch information about the executed search.
 *
 * The search will be stored by the "Search result" pane and fetched by the
 * "Search form" and "Search information" panes.
 */
function spapachesolr_panels_static_search_cache($search = NULL) {
  static $_search = NULL;

  if (!empty($search)) {
    $_search = array('keys' => '', 'filters' => '', 'sort' => '', 'path' => '', 'page' => 0);
    $_search = array_merge($_search, $search);
  }
  return $_search;
}
