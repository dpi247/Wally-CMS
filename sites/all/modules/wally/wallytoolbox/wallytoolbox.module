<?php
/**
 * A true boolean conversion function.
 * 
 * @param $v
 *   The value to be converted
 * @param $del
 *   default value return if conversion fail.
 *
 * @return
 *   boolean "true"/"false"
 */
function wallytoolbox_toboolean($v,$def=null) {
	if ($v===false) return false;
	if ($v===true) return true;
	if ($v=="true") return true;
	if ($v=="false") return false;
	if ($v==0) return false;
	if ($v==1) return true;
	return $def;
}


/**
 * Taxonomy get term by path
 * 
 * Search for taxonomy terms for a specific path 
 *
 * @param $path
 *   The taxonomy term path to match ( /term1/term2/term3 ). 
 * @param $voc
 *   The taxonomy vocabulary used for filtering on a single vocabulary.
 *
 * @return
 *   an array of term object
 */
function wallytoolbox_taxonomy_get_term_by_path($path, $voc=null) {

	$t = explode("/", trim($path,"/"));
	$t = $t[count($t)-1];

	if ($voc) {
		$db_result = db_query("SELECT t.tid, t.* FROM {term_data} t WHERE LOWER(t.name) = LOWER('%s') AND t.vid = %s", trim($t), $voc);
	} else {
		$db_result = db_query("SELECT t.tid, t.* FROM {term_data} t WHERE LOWER(t.name) = LOWER('%s')", trim($t));
	}

	$result = array();

	// Reverse building of path for founded terms.
	while ($term = db_fetch_object($db_result)) {
		$ppath = "";
		$parents = taxonomy_get_parents_all($term->tid);
		foreach ($parents as $parent) $ppath = strtolower($parent->name)."/".$ppath;
		if (trim($ppath,"/")==strtolower(trim($path,"/"))) $result[] = $term;
	}
	
	return ($result ? $result : null);
}

/**
 * Get node by cckfield
 * 
 * Load node(s) where cckfield match a value. 
 *
 * @param $param
 *   Array of cck_field=>value ( Operation OR )  
 * @param $node_type
 *   Id specified, return only content type
 * @return
 *   an array of term object
 */
function wallytoolbox_get_node_by_cckfield($param,$node_type=null) {

	$nodes = array();
	foreach ($param as $key => $value) {
		$sql="
			SELECT node.nid AS nid
			 FROM {node} node 
			 LEFT JOIN {content_".$key."} node_data_".$key." ON node.vid = node_data_".$key.".vid
			 WHERE (node_data_".$key.".".$key."_value = '%s')
			";

		// Fetch all node from CCK field table.
		if ($result = db_query($sql, $value)) {
			while ($item = db_fetch_object($result)) {
				if ($node = node_load($item->nid)) {
					if ($node_type) {
						if ($node->type == $node_type) {
							$nodes[$node->nid] = $node;
						}
					} else {
						$nodes[$node->nid] = $node;
					}
				} 
			}
		}
	}
	
	$result = array(); 
	foreach($nodes as $node) $result[]=$node;

	if (count($result)) { 
		return $result;
	} else {
		return null;
	}

}
	
/**
 * Add Taxonomy Term into Vocabulary 
 * 
 * Add a taxonomy term into a vocabulary without 
 * need to store a node
 *
 * @param $name
 *   That's the taxonomy term name. 
 * @param $vid
 *   The Taxonomy Vocabulary to store the term. 
 * @param $description
 *   Description of the term to be stored.
 * @return
 *   Taxonomy TID of the created term. 
 */
function wallytoolbox_add_taxonomy_term($name, $vid, $description = '', $weight = 0, $parent = null) {
  $form_values = array();
  $form_values['name'] = $name;
  $form_values['description'] = $description;
  $form_values['vid'] = $vid;
  $form_values['weight'] = $weight;
  if ($parent) $form_values['parent'] = $parent;
  taxonomy_save_term($form_values);
  return $form_values['tid'];
}

